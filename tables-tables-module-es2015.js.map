{"version":3,"sources":["./src/app/tables/basic-table/basic-table.component.ts","./src/app/tables/basic-table/basic-table.component.html","./src/app/tables/dynamic-table/dynamic-table.component.ts","./src/app/tables/dynamic-table/dynamic-table.component.html","./src/app/tables/expand-table/expand-table.component.ts","./src/app/tables/expand-table/expand-table.component.html","./src/app/tables/filterable/filterable.component.ts","./src/app/tables/filterable/filterable.component.html","./src/app/tables/footerrow-table/footerrow-table.component.ts","./src/app/tables/footerrow-table/footerrow-table.component.html","./src/app/tables/http-table/http-table.component.ts","./src/app/tables/http-table/http-table.component.html","./src/app/tables/mix/mix.component.ts","./src/app/tables/mix/mix.component.html","./src/app/tables/multiple-header-footer/multiple-header-footer.component.ts","./src/app/tables/multiple-header-footer/multiple-header-footer.component.html","./src/app/tables/pagination/pagination.component.ts","./src/app/tables/pagination/pagination.component.html","./src/app/tables/row-context-table/row-context-table.component.ts","./src/app/tables/row-context-table/row-context-table.component.html","./src/app/tables/selection-table/selection-table.component.ts","./src/app/tables/selection-table/selection-table.component.html","./src/app/tables/sortable/sortable.component.ts","./src/app/tables/sortable/sortable.component.html","./src/app/tables/sticky-column-table/sticky-column-table.component.ts","./src/app/tables/sticky-column-table/sticky-column-table.component.html","./src/app/tables/sticky-header-footer-table/sticky-header-footer-table.component.ts","./src/app/tables/sticky-header-footer-table/sticky-header-footer-table.component.html","./src/app/tables/tables.module.ts","./src/app/tables/tables.routing.ts"],"names":[],"mappings":"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","file":"tables-tables-module-es2015.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n    selector: 'app-basictable',\r\n    templateUrl: './basic-table.component.html',\r\n    styleUrls: ['./basic-table.component.scss']\r\n})\r\nexport class BasicTableComponent {\r\n    constructor(breakpointObserver: BreakpointObserver) {\r\n        breakpointObserver.observe(['(max-width: 600px)']).subscribe(result => {\r\n            this.displayedColumns = result.matches ?\r\n                ['position', 'name', 'weight', 'symbol'] :\r\n                ['position', 'name', 'weight', 'symbol'];\r\n        });\r\n    }\r\n\r\n    displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n    dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\r\n}\r\n\r\nexport interface Element {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\r\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\r\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\r\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\r\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\r\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\r\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\r\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\r\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\r\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\r\n];\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Basic use of `table mat-table`</mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n                        <!--- Note that these columns can be defined in any order.\r\n                                        The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"position\">\r\n                            <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"weight\">\r\n                            <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                            <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Basic use of `mat-table` (uses display flex)</mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <mat-table #table [dataSource]=\"dataSource\">\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"position\">\r\n                            <mat-header-cell *matHeaderCellDef> Position. </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\">\r\n                                <span class=\"header-label\">Position:</span>\r\n                                {{element.position}}\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\">\r\n                                <span class=\"header-label\">Name:</span>\r\n                                {{element.name}}\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"weight\">\r\n                            <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\">\r\n                                <span class=\"header-label\">Weight:</span>\r\n                                {{element.weight}}\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                            <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\">\r\n                                <span class=\"header-label\">Symbol:</span>\r\n                                {{element.symbol}}\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                    </mat-table>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nexport interface PeriodicElement {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n];\r\n\r\n@Component({\r\n    selector: 'app-dynamictable',\r\n    templateUrl: './dynamic-table.component.html',\r\n    styleUrls: ['./dynamic-table.component.scss']\r\n})\r\nexport class DynamicTableComponent {\r\n    displayedColumns: string[] = ['name', 'weight', 'symbol', 'position'];\r\n    columnsToDisplay: string[] = this.displayedColumns.slice();\r\n    data: PeriodicElement[] = ELEMENT_DATA;\r\n\r\n    addColumn() {\r\n        const randomColumn = Math.floor(Math.random() * this.displayedColumns.length);\r\n        this.columnsToDisplay.push(this.displayedColumns[randomColumn]);\r\n    }\r\n\r\n    removeColumn() {\r\n        if (this.columnsToDisplay.length) {\r\n            this.columnsToDisplay.pop();\r\n        }\r\n    }\r\n\r\n    shuffle() {\r\n        let currentIndex = this.columnsToDisplay.length;\r\n        while (0 !== currentIndex) {\r\n            const randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            // Swap\r\n            const temp = this.columnsToDisplay[currentIndex];\r\n            this.columnsToDisplay[currentIndex] = this.columnsToDisplay[randomIndex];\r\n            this.columnsToDisplay[randomIndex] = temp;\r\n        }\r\n    }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table dynamically changing the columns displayed <span\r\n                        class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <div class=\"button-row m-b-15 m-t-15\">\r\n                        <button mat-raised-button color=\"primary\" (click)=\"addColumn()\"> Add column </button>\r\n                        <button mat-raised-button color=\"primary\" (click)=\"removeColumn()\"> Remove column </button>\r\n                        <button mat-raised-button color=\"primary\" (click)=\"shuffle()\"> Shuffle </button>\r\n                    </div>\r\n\r\n                    <table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\r\n                        <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\r\n                            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    {\r\n        position: 1,\r\n        name: 'Hydrogen',\r\n        weight: 1.0079,\r\n        symbol: 'H',\r\n        description: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\r\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\r\n    }, {\r\n        position: 2,\r\n        name: 'Helium',\r\n        weight: 4.0026,\r\n        symbol: 'He',\r\n        description: `Helium is a chemical element with symbol He and atomic number 2. It is a\r\n        colorless, odorless, tasteless, non-toxic, inert, monatomic gas, the first in the noble gas\r\n        group in the periodic table. Its boiling point is the lowest among all the elements.`\r\n    }, {\r\n        position: 3,\r\n        name: 'Lithium',\r\n        weight: 6.941,\r\n        symbol: 'Li',\r\n        description: `Lithium is a chemical element with symbol Li and atomic number 3. It is a soft,\r\n        silvery-white alkali metal. Under standard conditions, it is the lightest metal and the\r\n        lightest solid element.`\r\n    }, {\r\n        position: 4,\r\n        name: 'Beryllium',\r\n        weight: 9.0122,\r\n        symbol: 'Be',\r\n        description: `Beryllium is a chemical element with symbol Be and atomic number 4. It is a\r\n        relatively rare element in the universe, usually occurring as a product of the spallation of\r\n        larger atomic nuclei that have collided with cosmic rays.`\r\n    }, {\r\n        position: 5,\r\n        name: 'Boron',\r\n        weight: 10.811,\r\n        symbol: 'B',\r\n        description: `Boron is a chemical element with symbol B and atomic number 5. Produced entirely\r\n        by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a\r\n        low-abundance element in the Solar system and in the Earth's crust.`\r\n    }, {\r\n        position: 6,\r\n        name: 'Carbon',\r\n        weight: 12.0107,\r\n        symbol: 'C',\r\n        description: `Carbon is a chemical element with symbol C and atomic number 6. It is nonmetallic\r\n        and tetravalent—making four electrons available to form covalent chemical bonds. It belongs\r\n        to group 14 of the periodic table.`\r\n    }, {\r\n        position: 7,\r\n        name: 'Nitrogen',\r\n        weight: 14.0067,\r\n        symbol: 'N',\r\n        description: `Nitrogen is a chemical element with symbol N and atomic number 7. It was first\r\n        discovered and isolated by Scottish physician Daniel Rutherford in 1772.`\r\n    }, {\r\n        position: 8,\r\n        name: 'Oxygen',\r\n        weight: 15.9994,\r\n        symbol: 'O',\r\n        description: `Oxygen is a chemical element with symbol O and atomic number 8. It is a member of\r\n         the chalcogen group on the periodic table, a highly reactive nonmetal, and an oxidizing\r\n         agent that readily forms oxides with most elements as well as with other compounds.`\r\n    }, {\r\n        position: 9,\r\n        name: 'Fluorine',\r\n        weight: 18.9984,\r\n        symbol: 'F',\r\n        description: `Fluorine is a chemical element with symbol F and atomic number 9. It is the\r\n        lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard\r\n        conditions.`\r\n    }, {\r\n        position: 10,\r\n        name: 'Neon',\r\n        weight: 20.1797,\r\n        symbol: 'Ne',\r\n        description: `Neon is a chemical element with symbol Ne and atomic number 10. It is a noble gas.\r\n        Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about\r\n        two-thirds the density of air.`\r\n    },\r\n];\r\n\r\n@Component({\r\n    selector: 'app-expandtable',\r\n    templateUrl: './expand-table.component.html',\r\n    styleUrls: ['./expand-table.component.scss'],\r\n    animations: [\r\n        trigger('detailExpand', [\r\n            state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n            state('expanded', style({ height: '*' })),\r\n            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n        ]),\r\n    ]\r\n})\r\n\r\nexport class ExpandTableComponent {\r\n    dataSource = ELEMENT_DATA;\r\n    columnsToDisplay = ['name', 'weight', 'symbol', 'position'];\r\n    expandedElement: PeriodicElement | null;\r\n}\r\n\r\nexport interface PeriodicElement {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n    description: string;\r\n}\r\n\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table with expandable rows <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\r\n                        <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\r\n                            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n                        <ng-container matColumnDef=\"expandedDetail\">\r\n                            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\r\n                                <div class=\"example-element-detail\"\r\n                                    [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n                                    <div class=\"example-element-diagram\">\r\n                                        <div class=\"example-element-position\"> {{element.position}} </div>\r\n                                        <div class=\"example-element-symbol\"> {{element.symbol}} </div>\r\n                                        <div class=\"example-element-name\"> {{element.name}} </div>\r\n                                        <div class=\"example-element-weight\"> {{element.weight}} </div>\r\n                                    </div>\r\n                                    <div class=\"example-element-description\">\r\n                                        {{element.description}}\r\n                                        <span class=\"example-element-description-attribution\"> -- Wikipedia </span>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n                        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\r\n                            [class.example-expanded-row]=\"expandedElement === element\"\r\n                            (click)=\"expandedElement = expandedElement === element ? null : element\">\r\n                        </tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\n\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\r\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\r\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\r\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\r\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\r\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\r\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\r\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\r\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\r\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' }\r\n];\r\n\r\n@Component({\r\n    selector: 'app-basictable',\r\n    templateUrl: './filterable.component.html',\r\n    styleUrls: ['./filterable.component.scss']\r\n})\r\nexport class FilterableComponent {\r\n    constructor(breakpointObserver: BreakpointObserver) {\r\n        breakpointObserver.observe(['(max-width: 600px)']).subscribe(result => {\r\n            this.displayedColumns = result.matches ?\r\n                ['position', 'name', 'weight', 'symbol'] :\r\n                ['position', 'name', 'weight', 'symbol'];\r\n        });\r\n    }\r\n\r\n    displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n    dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\r\n\r\n    applyFilter(filterValue: string) {\r\n        filterValue = filterValue.trim(); // Remove whitespace\r\n        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n}\r\nexport interface Element {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-card-title>Filterable table</mat-card-title>\r\n        <div class=\"bg-light p-10 p-r-20 p-l-20\">\r\n          <mat-form-field>\r\n            <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search (Filter)\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"responsive-table\">\r\n          <mat-table #table [dataSource]=\"dataSource\">\r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"position\">\r\n              <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Weight Column -->\r\n            <ng-container matColumnDef=\"weight\">\r\n              <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Symbol Column -->\r\n            <ng-container matColumnDef=\"symbol\">\r\n              <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n          </mat-table>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nexport interface Transaction {\r\n    item: string;\r\n    cost: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-footerrowtable',\r\n    templateUrl: './footerrow-table.component.html',\r\n    styleUrls: ['./footerrow-table.component.scss']\r\n})\r\n\r\nexport class FooterrowTableComponent {\r\n    displayedColumns: string[] = ['item', 'cost'];\r\n    transactions: Transaction[] = [\r\n        { item: 'Beach ball', cost: 4 },\r\n        { item: 'Towel', cost: 5 },\r\n        { item: 'Frisbee', cost: 2 },\r\n        { item: 'Sunscreen', cost: 4 },\r\n        { item: 'Cooler', cost: 25 },\r\n        { item: 'Swim suit', cost: 15 },\r\n    ];\r\n\r\n    /** Gets the total cost of all transactions. */\r\n    getTotalCost() {\r\n        return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n    }\r\n}\r\n\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Footer row table <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8\">\r\n                        <!-- Item Column -->\r\n                        <ng-container matColumnDef=\"item\">\r\n                            <th mat-header-cell *matHeaderCellDef> Item </th>\r\n                            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\r\n                            <td mat-footer-cell *matFooterCellDef> Total </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Cost Column -->\r\n                        <ng-container matColumnDef=\"cost\">\r\n                            <th mat-header-cell *matHeaderCellDef> Cost </th>\r\n                            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\r\n                            <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                        <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { merge, Observable, of as observableOf } from 'rxjs';\r\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-http-table',\r\n    templateUrl: './http-table.component.html',\r\n    styleUrls: ['./http-table.component.scss']\r\n})\r\nexport class HttptableComponent implements AfterViewInit {\r\n    displayedColumns: string[] = ['created', 'state', 'number', 'title'];\r\n    exampleDatabase: ExampleHttpDatabase | null;\r\n    data: GithubIssue[] = [];\r\n\r\n    resultsLength = 0;\r\n    isLoadingResults = true;\r\n    isRateLimitReached = false;\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    constructor(private _httpClient: HttpClient) { }\r\n\r\n    ngAfterViewInit() {\r\n        this.exampleDatabase = new ExampleHttpDatabase(this._httpClient);\r\n\r\n        // If the user changes the sort order, reset back to the first page.\r\n        this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n        merge(this.sort.sortChange, this.paginator.page)\r\n            .pipe(\r\n                startWith({}),\r\n                switchMap(() => {\r\n                    this.isLoadingResults = true;\r\n                    return this.exampleDatabase!.getRepoIssues(\r\n                        this.sort.active, this.sort.direction, this.paginator.pageIndex);\r\n                }),\r\n                map(data => {\r\n                    // Flip flag to show that loading has finished.\r\n                    this.isLoadingResults = false;\r\n                    this.isRateLimitReached = false;\r\n                    this.resultsLength = data.total_count;\r\n\r\n                    return data.items;\r\n                }),\r\n                catchError(() => {\r\n                    this.isLoadingResults = false;\r\n                    // Catch if the GitHub API has reached its rate limit. Return empty data.\r\n                    this.isRateLimitReached = true;\r\n                    return observableOf([]);\r\n                })\r\n            ).subscribe(data => this.data = data);\r\n    }\r\n}\r\n\r\nexport interface GithubApi {\r\n    items: GithubIssue[];\r\n    total_count: number;\r\n}\r\n\r\nexport interface GithubIssue {\r\n    created_at: string;\r\n    number: string;\r\n    state: string;\r\n    title: string;\r\n}\r\n\r\n/** An example database that the data source uses to retrieve data for the table. */\r\nexport class ExampleHttpDatabase {\r\n    constructor(private _httpClient: HttpClient) { }\r\n\r\n    getRepoIssues(sort: string, order: string, page: number): Observable<GithubApi> {\r\n        const href = 'https://api.github.com/search/issues';\r\n        const requestUrl =\r\n            `${href}?q=repo:angular/components&sort=${sort}&order=${order}&page=${page + 1}`;\r\n\r\n        return this._httpClient.get<GithubApi>(requestUrl);\r\n    }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table retrieving data through HTTP <span class=\"label label-primary\">new</span>\r\n                </mat-card-title>\r\n\r\n                <div class=\"example-container m-t-20\">\r\n                    <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\r\n                        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\r\n                        <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\r\n                            GitHub's API rate limit has been reached. It will be reset in one minute.\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"example-table-container responsive-table\">\r\n\r\n                        <table mat-table [dataSource]=\"data\" class=\"example-table\" matSort matSortActive=\"created\"\r\n                            matSortDisableClear matSortDirection=\"desc\">\r\n                            <!-- Number Column -->\r\n                            <ng-container matColumnDef=\"number\">\r\n                                <th mat-header-cell *matHeaderCellDef>#</th>\r\n                                <td mat-cell *matCellDef=\"let row\">{{row.number}}</td>\r\n                            </ng-container>\r\n\r\n                            <!-- Title Column -->\r\n                            <ng-container matColumnDef=\"title\">\r\n                                <th mat-header-cell *matHeaderCellDef>Title</th>\r\n                                <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\r\n                            </ng-container>\r\n\r\n                            <!-- State Column -->\r\n                            <ng-container matColumnDef=\"state\">\r\n                                <th mat-header-cell *matHeaderCellDef>State</th>\r\n                                <td mat-cell *matCellDef=\"let row\">{{row.state}}</td>\r\n                            </ng-container>\r\n\r\n                            <!-- Created Column -->\r\n                            <ng-container matColumnDef=\"created\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\r\n                                    Created\r\n                                </th>\r\n                                <td mat-cell *matCellDef=\"let row\">{{row.created_at | date}}</td>\r\n                            </ng-container>\r\n\r\n                            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <mat-paginator [length]=\"resultsLength\" [pageSize]=\"30\"></mat-paginator>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\n\r\n/** Constants used to fill up our data base. */\r\nconst COLORS = [\r\n    'maroon',\r\n    'red',\r\n    'orange',\r\n    'yellow',\r\n    'olive',\r\n    'green',\r\n    'purple',\r\n    'fuchsia',\r\n    'lime',\r\n    'teal',\r\n    'aqua',\r\n    'blue',\r\n    'navy',\r\n    'black',\r\n    'gray'\r\n];\r\n\r\nconst NAMES = [\r\n    'Maia',\r\n    'Asher',\r\n    'Olivia',\r\n    'Atticus',\r\n    'Amelia',\r\n    'Jack',\r\n    'Charlotte',\r\n    'Theodore',\r\n    'Isla',\r\n    'Oliver',\r\n    'Isabella',\r\n    'Jasper',\r\n    'Cora',\r\n    'Levi',\r\n    'Violet',\r\n    'Arthur',\r\n    'Mia',\r\n    'Thomas',\r\n    'Elizabeth'\r\n];\r\n\r\n@Component({\r\n    selector: 'app-mix',\r\n    templateUrl: './mix.component.html',\r\n    styleUrls: ['./mix.component.scss']\r\n})\r\nexport class MixComponent implements AfterViewInit {\r\n    displayedColumns = ['id', 'name', 'progress', 'color'];\r\n    dataSource: MatTableDataSource<UserData>;\r\n\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n    constructor(breakpointObserver: BreakpointObserver) {\r\n\r\n        breakpointObserver.observe(['(max-width: 600px)']).subscribe(result => {\r\n            this.displayedColumns = result.matches ?\r\n                ['id', 'name', 'progress', 'color'] :\r\n                ['id', 'name', 'progress', 'color'];\r\n        });\r\n\r\n        // Create 100 users\r\n        const users: UserData[] = [];\r\n        for (let i = 1; i <= 100; i++) {\r\n            users.push(createNewUser(i));\r\n        }\r\n\r\n        // Assign the data to the data source for the table to render\r\n        this.dataSource = new MatTableDataSource(users);\r\n    }\r\n\r\n    /**\r\n     * Set the paginator and sort after the view init since this component will\r\n     * be able to query its view for the initialized paginator and sort.\r\n     */\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    applyFilter(filterValue: string) {\r\n        filterValue = filterValue.trim(); // Remove whitespace\r\n        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n}\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n    const name =\r\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\r\n        ' ' +\r\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\r\n        '.';\r\n\r\n    return {\r\n        id: id.toString(),\r\n        name: name,\r\n        progress: Math.round(Math.random() * 100).toString(),\r\n        color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\r\n    };\r\n}\r\n\r\nexport interface UserData {\r\n    id: string;\r\n    name: string;\r\n    progress: string;\r\n    color: string;\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Data table with sorting, pagination, and filtering.</mat-card-title>\r\n                <div class=\"bg-light p-10 p-r-20 p-l-20\">\r\n                    <mat-form-field>\r\n                        <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"responsive-table\">\r\n                    <mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                        <!-- ID Column -->\r\n                        <ng-container matColumnDef=\"id\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let row\"> {{row.id}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Progress Column -->\r\n                        <ng-container matColumnDef=\"progress\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Progress </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let row\"> {{row.progress}}% </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Color Column -->\r\n                        <ng-container matColumnDef=\"color\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Color </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.color}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                        </mat-row>\r\n                    </mat-table>\r\n\r\n                    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nimport { Transaction } from '../footerrow-table/footerrow-table.component';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-multiple-headerfooter',\r\n    templateUrl: './multiple-header-footer.component.html',\r\n    styleUrls: ['./multiple-header-footer.component.scss']\r\n})\r\n\r\nexport class MultipleheaderfooterTableComponent {\r\n    displayedColumns: string[] = ['item', 'cost'];\r\n    transactions: Transaction[] = [\r\n        { item: 'Beach ball', cost: 4 },\r\n        { item: 'Towel', cost: 5 },\r\n        { item: 'Frisbee', cost: 2 },\r\n        { item: 'Sunscreen', cost: 4 },\r\n        { item: 'Cooler', cost: 25 },\r\n        { item: 'Swim suit', cost: 15 },\r\n    ];\r\n\r\n    /** Gets the total cost of all transactions. */\r\n    getTotalCost() {\r\n        return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n    }\r\n}\r\n\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table with multiple header and footer rows <span class=\"label label-primary\">new</span>\r\n                </mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8\">\r\n                        <!-- Item Column -->\r\n                        <ng-container matColumnDef=\"item\">\r\n                            <th mat-header-cell *matHeaderCellDef> Item </th>\r\n                            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\r\n                            <td mat-footer-cell *matFooterCellDef> Total </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Cost Column -->\r\n                        <ng-container matColumnDef=\"cost\">\r\n                            <th mat-header-cell *matHeaderCellDef> Cost </th>\r\n                            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\r\n                            <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Item Description Column -->\r\n                        <ng-container matColumnDef=\"item-description\">\r\n                            <th mat-header-cell *matHeaderCellDef> Name of the item purchased </th>\r\n                        </ng-container>\r\n\r\n                        <!-- Cost Description Column -->\r\n                        <ng-container matColumnDef=\"cost-description\">\r\n                            <th mat-header-cell *matHeaderCellDef> Cost of the item in USD </th>\r\n                        </ng-container>\r\n\r\n                        <!-- Disclaimer column -->\r\n                        <ng-container matColumnDef=\"disclaimer\">\r\n                            <td mat-footer-cell *matFooterCellDef colspan=\"2\">\r\n                                Please note that the cost of items displayed are completely and totally made up.\r\n                            </td>\r\n                        </ng-container>\r\n\r\n                        <!-- The table will render two header rows, one data row per data object, and two footer rows. -->\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"example-first-header-row\">\r\n                        </tr>\r\n                        <tr mat-header-row *matHeaderRowDef=\"['item-description', 'cost-description']\"\r\n                            class=\"example-second-header-row\">\r\n                        </tr>\r\n\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                        <tr mat-footer-row *matFooterRowDef=\"displayedColumns\" class=\"example-first-footer-row\"></tr>\r\n                        <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\" class=\"example-second-footer-row\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\r\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\r\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\r\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\r\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\r\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\r\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\r\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\r\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\r\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' }\r\n];\r\n\r\n@Component({\r\n    selector: 'app-basictable',\r\n    templateUrl: './pagination.component.html',\r\n    styleUrls: ['./pagination.component.scss']\r\n})\r\nexport class PaginationComponent implements AfterViewInit {\r\n    displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n    dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\r\n\r\n    constructor(breakpointObserver: BreakpointObserver) {\r\n        breakpointObserver.observe(['(max-width: 600px)']).subscribe(result => {\r\n            this.displayedColumns = result.matches ?\r\n                ['position', 'name', 'weight', 'symbol'] :\r\n                ['position', 'name', 'weight', 'symbol'];\r\n        });\r\n    }\r\n\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n    /**\r\n     * Set the paginator after the view init since this component will\r\n     * be able to query its view for the initialized paginator.\r\n     */\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n    }\r\n}\r\nexport interface Element {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-card-title>Table with pagination</mat-card-title>\r\n        <div class=\"responsive-table\">\r\n          <mat-table #table [dataSource]=\"dataSource\">\r\n\r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"position\">\r\n              <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Weight Column -->\r\n            <ng-container matColumnDef=\"weight\">\r\n              <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Symbol Column -->\r\n            <ng-container matColumnDef=\"symbol\">\r\n              <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n          </mat-table>\r\n\r\n          <mat-paginator #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 20]\">\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n    selector: 'app-row-context',\r\n    templateUrl: './row-context-table.component.html',\r\n    styleUrls: ['./row-context-table.component.scss']\r\n})\r\n\r\nexport class RowcontextTableComponent {\r\n    displayedColumns: string[] = ['$implicit', 'index', 'count', 'first', 'last', 'even', 'odd'];\r\n    data: string[] = ['one', 'two', 'three', 'four', 'five'];\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table showing each row context properties.\r\n                    <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"$implicit\">\r\n                            <th mat-header-cell *matHeaderCellDef> $implicit </th>\r\n                            <td mat-cell *matCellDef=\"let data\"> {{data}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"index\">\r\n                            <th mat-header-cell *matHeaderCellDef> index </th>\r\n                            <td mat-cell *matCellDef=\"let index = index\"> {{index}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"count\">\r\n                            <th mat-header-cell *matHeaderCellDef> count </th>\r\n                            <td mat-cell *matCellDef=\"let count = count\"> {{count}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"first\">\r\n                            <th mat-header-cell *matHeaderCellDef> first </th>\r\n                            <td mat-cell *matCellDef=\"let first = first\"> {{first}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"last\">\r\n                            <th mat-header-cell *matHeaderCellDef> last </th>\r\n                            <td mat-cell *matCellDef=\"let last = last\"> {{last}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"even\">\r\n                            <th mat-header-cell *matHeaderCellDef> even </th>\r\n                            <td mat-cell *matCellDef=\"let even = even\"> {{even}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"odd\">\r\n                            <th mat-header-cell *matHeaderCellDef> odd </th>\r\n                            <td mat-cell *matCellDef=\"let odd = odd\"> {{odd}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nexport interface PeriodicElement {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n];\r\n\r\n@Component({\r\n    selector: 'app-selection',\r\n    templateUrl: './selection-table.component.html',\r\n    styleUrls: ['./selection-table.component.scss']\r\n})\r\n\r\nexport class SelectionTableComponent {\r\n    displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\r\n    dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n    selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n    /** Whether the number of selected elements matches the total number of rows. */\r\n    isAllSelected() {\r\n        const numSelected = this.selection.selected.length;\r\n        const numRows = this.dataSource.data.length;\r\n        return numSelected === numRows;\r\n    }\r\n\r\n    /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n    masterToggle() {\r\n        this.isAllSelected() ?\r\n            this.selection.clear() :\r\n            this.dataSource.data.forEach(row => this.selection.select(row));\r\n    }\r\n\r\n    /** The label for the checkbox on the passed row */\r\n    checkboxLabel(row?: PeriodicElement): string {\r\n        if (!row) {\r\n            return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n        }\r\n        return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n    }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table with selection\r\n                    <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n                        <!-- Checkbox Column -->\r\n                        <ng-container matColumnDef=\"select\">\r\n                            <th mat-header-cell *matHeaderCellDef>\r\n                                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                    [aria-label]=\"checkboxLabel()\">\r\n                                </mat-checkbox>\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let row\">\r\n                                <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                    (change)=\"$event ? selection.toggle(row) : null\"\r\n                                    [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                </mat-checkbox>\r\n                            </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"position\">\r\n                            <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"weight\">\r\n                            <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                            <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\">\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\r\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\r\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\r\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\r\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\r\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\r\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\r\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\r\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\r\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' }\r\n];\r\n\r\n@Component({\r\n    selector: 'app-sortable',\r\n    templateUrl: './sortable.component.html',\r\n    styleUrls: ['./sortable.component.scss']\r\n})\r\nexport class SortableComponent implements AfterViewInit {\r\n    displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n    dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n    /**\r\n     * Set the sort after the view init since this component will\r\n     * be able to query its view for the initialized sort.\r\n     */\r\n    ngAfterViewInit() {\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n}\r\nexport interface Element {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Sortable table</mat-card-title>\r\n                <div class=\"table-rasponsive\">\r\n                    <mat-table #table [dataSource]=\"dataSource\" matSort style=\"max-height: 500px; overflow:auto;\">\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"position\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> No. </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"weight\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Weight </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                    </mat-table>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nexport interface PeriodicElement {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n];\r\n\r\n@Component({\r\n    selector: 'app-sticky-column',\r\n    templateUrl: './sticky-column-table.component.html',\r\n    styleUrls: ['./sticky-column-table.component.scss']\r\n})\r\n\r\nexport class StickycolumnTableComponent {\r\n    displayedColumns =\r\n        ['name', 'position', 'weight', 'symbol', 'position', 'weight', 'symbol', 'star'];\r\n    dataSource = ELEMENT_DATA;\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table with sticky columns\r\n                    <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"example-container responsive-table\">\r\n                    <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\" sticky>\r\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"position\">\r\n                            <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"weight\">\r\n                            <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                            <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Star Column -->\r\n                        <ng-container matColumnDef=\"star\" stickyEnd>\r\n                            <th mat-header-cell *matHeaderCellDef></th>\r\n                            <td mat-cell *matCellDef=\"let element\">\r\n                                <mat-icon>more_vert</mat-icon>\r\n                            </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nexport interface Transaction {\r\n    item: string;\r\n    cost: number;\r\n}\r\n\r\nexport interface PeriodicElement {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n];\r\n\r\n@Component({\r\n    selector: 'app-sticky-header-footer',\r\n    templateUrl: './sticky-header-footer-table.component.html',\r\n    styleUrls: ['./sticky-header-footer-table.component.scss']\r\n})\r\n\r\nexport class StickyheaderfooterTableComponent {\r\n    displayedColumns = ['item', 'cost'];\r\n    transactions: Transaction[] = [\r\n        { item: 'Beach ball', cost: 4 },\r\n        { item: 'Towel', cost: 5 },\r\n        { item: 'Frisbee', cost: 2 },\r\n        { item: 'Sunscreen', cost: 4 },\r\n        { item: 'Cooler', cost: 25 },\r\n        { item: 'Swim suit', cost: 15 },\r\n    ];\r\n\r\n    /** Gets the total cost of all transactions. */\r\n    getTotalCost() {\r\n        return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n    }\r\n\r\n\r\n    // Fixed header\r\n    displayedColumns1 = ['position', 'name', 'weight', 'symbol'];\r\n    dataSource = ELEMENT_DATA;\r\n}\r\n\r\n\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table with sticky footer\r\n                    <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"example-container responsive-table m-t-15\">\r\n                    <table mat-table [dataSource]=\"transactions\">\r\n                        <!-- Item Column -->\r\n                        <ng-container matColumnDef=\"item\">\r\n                            <th mat-header-cell *matHeaderCellDef> Item </th>\r\n                            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\r\n                            <td mat-footer-cell *matFooterCellDef> Total </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Cost Column -->\r\n                        <ng-container matColumnDef=\"cost\">\r\n                            <th mat-header-cell *matHeaderCellDef> Cost </th>\r\n                            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\r\n                            <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                        <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table with sticky header\r\n                    <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"example-container responsive-table m-t-15\">\r\n                    <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"position\">\r\n                            <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"weight\">\r\n                            <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                            <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns1; sticky: true\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns1;\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import 'hammerjs';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DemoMaterialModule } from '../demo-material-module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { TablesRoutes } from './tables.routing';\r\n\r\n\r\nimport { BasicTableComponent } from './basic-table/basic-table.component';\r\nimport { FilterableComponent } from './filterable/filterable.component';\r\nimport { PaginationComponent } from './pagination/pagination.component';\r\nimport { SortableComponent } from './sortable/sortable.component';\r\nimport { MixComponent } from './mix/mix.component';\r\nimport { DynamicTableComponent } from './dynamic-table/dynamic-table.component';\r\nimport { ExpandTableComponent } from './expand-table/expand-table.component';\r\nimport { FooterrowTableComponent } from './footerrow-table/footerrow-table.component';\r\nimport { MultipleheaderfooterTableComponent } from './multiple-header-footer/multiple-header-footer.component';\r\nimport { HttptableComponent } from './http-table/http-table.component';\r\nimport { RowcontextTableComponent } from './row-context-table/row-context-table.component';\r\nimport { SelectionTableComponent } from './selection-table/selection-table.component';\r\nimport { StickycolumnTableComponent } from './sticky-column-table/sticky-column-table.component';\r\nimport { StickyheaderfooterTableComponent } from './sticky-header-footer-table/sticky-header-footer-table.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(TablesRoutes),\r\n        DemoMaterialModule,\r\n        FlexLayoutModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [\r\n        BasicTableComponent,\r\n        FilterableComponent,\r\n        PaginationComponent,\r\n        SortableComponent,\r\n        MixComponent,\r\n        DynamicTableComponent,\r\n        ExpandTableComponent,\r\n        FooterrowTableComponent,\r\n        MultipleheaderfooterTableComponent,\r\n        HttptableComponent,\r\n        RowcontextTableComponent,\r\n        SelectionTableComponent,\r\n        StickycolumnTableComponent,\r\n        StickyheaderfooterTableComponent\r\n    ]\r\n})\r\nexport class TablesModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { BasicTableComponent } from './basic-table/basic-table.component';\r\nimport { FilterableComponent } from './filterable/filterable.component';\r\nimport { PaginationComponent } from './pagination/pagination.component';\r\nimport { SortableComponent } from './sortable/sortable.component';\r\nimport { MixComponent } from './mix/mix.component';\r\nimport { DynamicTableComponent } from './dynamic-table/dynamic-table.component';\r\nimport { ExpandTableComponent } from './expand-table/expand-table.component';\r\nimport { FooterrowTableComponent } from './footerrow-table/footerrow-table.component';\r\nimport { MultipleheaderfooterTableComponent } from './multiple-header-footer/multiple-header-footer.component';\r\nimport { HttptableComponent } from './http-table/http-table.component';\r\nimport { RowcontextTableComponent } from './row-context-table/row-context-table.component';\r\nimport { SelectionTableComponent } from './selection-table/selection-table.component';\r\nimport { StickycolumnTableComponent } from './sticky-column-table/sticky-column-table.component';\r\nimport { StickyheaderfooterTableComponent } from './sticky-header-footer-table/sticky-header-footer-table.component';\r\n\r\nexport const TablesRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: 'basictable',\r\n                component: BasicTableComponent,\r\n                data: {\r\n                    title: 'Basic Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Basic Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'filterable',\r\n                component: FilterableComponent,\r\n                data: {\r\n                    title: 'Filter Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Filter Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'pagination',\r\n                component: PaginationComponent,\r\n                data: {\r\n                    title: 'Pagination Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Pagination Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'sortable',\r\n                component: SortableComponent,\r\n                data: {\r\n                    title: 'Sortable',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Sortable' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'mix',\r\n                component: MixComponent,\r\n                data: {\r\n                    title: 'Mix Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Mix Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'dynamic-table',\r\n                component: DynamicTableComponent,\r\n                data: {\r\n                    title: 'Dynamic Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Dynamic Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'expand-table',\r\n                component: ExpandTableComponent,\r\n                data: {\r\n                    title: 'Expand Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Expand Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'footerrow-table',\r\n                component: FooterrowTableComponent,\r\n                data: {\r\n                    title: 'Footer row Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Footer row Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'multiple-header-footer',\r\n                component: MultipleheaderfooterTableComponent,\r\n                data: {\r\n                    title: 'Multiple Header Footer',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Multiple Header Footer' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'http-table',\r\n                component: HttptableComponent,\r\n                data: {\r\n                    title: 'HTTP Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'HTTP Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'row-context-table',\r\n                component: RowcontextTableComponent,\r\n                data: {\r\n                    title: 'Row Context Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Row Context Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'selection-table',\r\n                component: SelectionTableComponent,\r\n                data: {\r\n                    title: 'Selection Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Selection Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'sticky-column-table',\r\n                component: StickycolumnTableComponent,\r\n                data: {\r\n                    title: 'Sticky Column Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Sticky Column Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'sticky-footer-table',\r\n                component: StickyheaderfooterTableComponent,\r\n                data: {\r\n                    title: 'Sticky Header Footer Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Sticky Header Footer Table' }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n];\r\n"],"sourceRoot":"webpack:///"}