{"version":3,"sources":["webpack:///src/app/tables/basic-table/basic-table.component.ts","webpack:///src/app/tables/basic-table/basic-table.component.html","webpack:///src/app/tables/dynamic-table/dynamic-table.component.ts","webpack:///src/app/tables/dynamic-table/dynamic-table.component.html","webpack:///src/app/tables/expand-table/expand-table.component.ts","webpack:///src/app/tables/expand-table/expand-table.component.html","webpack:///src/app/tables/filterable/filterable.component.ts","webpack:///src/app/tables/filterable/filterable.component.html","webpack:///src/app/tables/footerrow-table/footerrow-table.component.ts","webpack:///src/app/tables/footerrow-table/footerrow-table.component.html","webpack:///src/app/tables/http-table/http-table.component.ts","webpack:///src/app/tables/http-table/http-table.component.html","webpack:///src/app/tables/mix/mix.component.ts","webpack:///src/app/tables/mix/mix.component.html","webpack:///src/app/tables/multiple-header-footer/multiple-header-footer.component.ts","webpack:///src/app/tables/multiple-header-footer/multiple-header-footer.component.html","webpack:///src/app/tables/pagination/pagination.component.ts","webpack:///src/app/tables/pagination/pagination.component.html","webpack:///src/app/tables/row-context-table/row-context-table.component.ts","webpack:///src/app/tables/row-context-table/row-context-table.component.html","webpack:///src/app/tables/selection-table/selection-table.component.ts","webpack:///src/app/tables/selection-table/selection-table.component.html","webpack:///src/app/tables/sortable/sortable.component.ts","webpack:///src/app/tables/sortable/sortable.component.html","webpack:///src/app/tables/sticky-column-table/sticky-column-table.component.ts","webpack:///src/app/tables/sticky-column-table/sticky-column-table.component.html","webpack:///src/app/tables/sticky-header-footer-table/sticky-header-footer-table.component.ts","webpack:///src/app/tables/sticky-header-footer-table/sticky-header-footer-table.component.html","webpack:///src/app/tables/tables.module.ts","webpack:///src/app/tables/tables.routing.ts"],"names":["BasicTableComponent","breakpointObserver","displayedColumns","dataSource","ELEMENT_DATA","observe","subscribe","result","matches","selector","templateUrl","styleUrls","position","name","weight","symbol","DynamicTableComponent","columnsToDisplay","slice","data","randomColumn","Math","floor","random","length","push","pop","currentIndex","randomIndex","temp","addColumn","removeColumn","shuffle","description","ExpandTableComponent","height","minHeight","animations","FilterableComponent","filterValue","trim","toLowerCase","filter","applyFilter","FooterrowTableComponent","transactions","item","cost","map","t","reduce","acc","value","HttptableComponent","_httpClient","resultsLength","isLoadingResults","isRateLimitReached","exampleDatabase","ExampleHttpDatabase","sort","sortChange","paginator","pageIndex","page","pipe","getRepoIssues","active","direction","total_count","items","order","href","requestUrl","get","COLORS","NAMES","MixComponent","users","i","createNewUser","static","id","round","charAt","toString","progress","color","MultipleheaderfooterTableComponent","PaginationComponent","RowcontextTableComponent","$event","stopPropagation","selection","SelectionTableComponent","numSelected","selected","numRows","isAllSelected","clear","forEach","row","select","isSelected","SortableComponent","StickycolumnTableComponent","StickyheaderfooterTableComponent","displayedColumns1","TablesModule","forChild","imports","declarations","TablesRoutes","path","children","component","title","urls","url"],"mappings":"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","file":"tables-tables-module-es5.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n    selector: 'app-basictable',\r\n    templateUrl: './basic-table.component.html',\r\n    styleUrls: ['./basic-table.component.scss']\r\n})\r\nexport class BasicTableComponent {\r\n    constructor(breakpointObserver: BreakpointObserver) {\r\n        breakpointObserver.observe(['(max-width: 600px)']).subscribe(result => {\r\n            this.displayedColumns = result.matches ?\r\n                ['position', 'name', 'weight', 'symbol'] :\r\n                ['position', 'name', 'weight', 'symbol'];\r\n        });\r\n    }\r\n\r\n    displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n    dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\r\n}\r\n\r\nexport interface Element {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\r\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\r\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\r\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\r\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\r\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\r\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\r\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\r\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\r\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\r\n];\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Basic use of `table mat-table`</mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n                        <!--- Note that these columns can be defined in any order.\r\n                                        The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"position\">\r\n                            <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"weight\">\r\n                            <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                            <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Basic use of `mat-table` (uses display flex)</mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <mat-table #table [dataSource]=\"dataSource\">\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"position\">\r\n                            <mat-header-cell *matHeaderCellDef> Position. </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\">\r\n                                <span class=\"header-label\">Position:</span>\r\n                                {{element.position}}\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\">\r\n                                <span class=\"header-label\">Name:</span>\r\n                                {{element.name}}\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"weight\">\r\n                            <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\">\r\n                                <span class=\"header-label\">Weight:</span>\r\n                                {{element.weight}}\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                            <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\">\r\n                                <span class=\"header-label\">Symbol:</span>\r\n                                {{element.symbol}}\r\n                            </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                    </mat-table>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nexport interface PeriodicElement {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n];\r\n\r\n@Component({\r\n    selector: 'app-dynamictable',\r\n    templateUrl: './dynamic-table.component.html',\r\n    styleUrls: ['./dynamic-table.component.scss']\r\n})\r\nexport class DynamicTableComponent {\r\n    displayedColumns: string[] = ['name', 'weight', 'symbol', 'position'];\r\n    columnsToDisplay: string[] = this.displayedColumns.slice();\r\n    data: PeriodicElement[] = ELEMENT_DATA;\r\n\r\n    addColumn() {\r\n        const randomColumn = Math.floor(Math.random() * this.displayedColumns.length);\r\n        this.columnsToDisplay.push(this.displayedColumns[randomColumn]);\r\n    }\r\n\r\n    removeColumn() {\r\n        if (this.columnsToDisplay.length) {\r\n            this.columnsToDisplay.pop();\r\n        }\r\n    }\r\n\r\n    shuffle() {\r\n        let currentIndex = this.columnsToDisplay.length;\r\n        while (0 !== currentIndex) {\r\n            const randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            // Swap\r\n            const temp = this.columnsToDisplay[currentIndex];\r\n            this.columnsToDisplay[currentIndex] = this.columnsToDisplay[randomIndex];\r\n            this.columnsToDisplay[randomIndex] = temp;\r\n        }\r\n    }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table dynamically changing the columns displayed <span\r\n                        class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <div class=\"button-row m-b-15 m-t-15\">\r\n                        <button mat-raised-button color=\"primary\" (click)=\"addColumn()\"> Add column </button>\r\n                        <button mat-raised-button color=\"primary\" (click)=\"removeColumn()\"> Remove column </button>\r\n                        <button mat-raised-button color=\"primary\" (click)=\"shuffle()\"> Shuffle </button>\r\n                    </div>\r\n\r\n                    <table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\r\n                        <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\r\n                            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    {\r\n        position: 1,\r\n        name: 'Hydrogen',\r\n        weight: 1.0079,\r\n        symbol: 'H',\r\n        description: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\r\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\r\n    }, {\r\n        position: 2,\r\n        name: 'Helium',\r\n        weight: 4.0026,\r\n        symbol: 'He',\r\n        description: `Helium is a chemical element with symbol He and atomic number 2. It is a\r\n        colorless, odorless, tasteless, non-toxic, inert, monatomic gas, the first in the noble gas\r\n        group in the periodic table. Its boiling point is the lowest among all the elements.`\r\n    }, {\r\n        position: 3,\r\n        name: 'Lithium',\r\n        weight: 6.941,\r\n        symbol: 'Li',\r\n        description: `Lithium is a chemical element with symbol Li and atomic number 3. It is a soft,\r\n        silvery-white alkali metal. Under standard conditions, it is the lightest metal and the\r\n        lightest solid element.`\r\n    }, {\r\n        position: 4,\r\n        name: 'Beryllium',\r\n        weight: 9.0122,\r\n        symbol: 'Be',\r\n        description: `Beryllium is a chemical element with symbol Be and atomic number 4. It is a\r\n        relatively rare element in the universe, usually occurring as a product of the spallation of\r\n        larger atomic nuclei that have collided with cosmic rays.`\r\n    }, {\r\n        position: 5,\r\n        name: 'Boron',\r\n        weight: 10.811,\r\n        symbol: 'B',\r\n        description: `Boron is a chemical element with symbol B and atomic number 5. Produced entirely\r\n        by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a\r\n        low-abundance element in the Solar system and in the Earth's crust.`\r\n    }, {\r\n        position: 6,\r\n        name: 'Carbon',\r\n        weight: 12.0107,\r\n        symbol: 'C',\r\n        description: `Carbon is a chemical element with symbol C and atomic number 6. It is nonmetallic\r\n        and tetravalent—making four electrons available to form covalent chemical bonds. It belongs\r\n        to group 14 of the periodic table.`\r\n    }, {\r\n        position: 7,\r\n        name: 'Nitrogen',\r\n        weight: 14.0067,\r\n        symbol: 'N',\r\n        description: `Nitrogen is a chemical element with symbol N and atomic number 7. It was first\r\n        discovered and isolated by Scottish physician Daniel Rutherford in 1772.`\r\n    }, {\r\n        position: 8,\r\n        name: 'Oxygen',\r\n        weight: 15.9994,\r\n        symbol: 'O',\r\n        description: `Oxygen is a chemical element with symbol O and atomic number 8. It is a member of\r\n         the chalcogen group on the periodic table, a highly reactive nonmetal, and an oxidizing\r\n         agent that readily forms oxides with most elements as well as with other compounds.`\r\n    }, {\r\n        position: 9,\r\n        name: 'Fluorine',\r\n        weight: 18.9984,\r\n        symbol: 'F',\r\n        description: `Fluorine is a chemical element with symbol F and atomic number 9. It is the\r\n        lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard\r\n        conditions.`\r\n    }, {\r\n        position: 10,\r\n        name: 'Neon',\r\n        weight: 20.1797,\r\n        symbol: 'Ne',\r\n        description: `Neon is a chemical element with symbol Ne and atomic number 10. It is a noble gas.\r\n        Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about\r\n        two-thirds the density of air.`\r\n    },\r\n];\r\n\r\n@Component({\r\n    selector: 'app-expandtable',\r\n    templateUrl: './expand-table.component.html',\r\n    styleUrls: ['./expand-table.component.scss'],\r\n    animations: [\r\n        trigger('detailExpand', [\r\n            state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n            state('expanded', style({ height: '*' })),\r\n            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n        ]),\r\n    ]\r\n})\r\n\r\nexport class ExpandTableComponent {\r\n    dataSource = ELEMENT_DATA;\r\n    columnsToDisplay = ['name', 'weight', 'symbol', 'position'];\r\n    expandedElement: PeriodicElement | null;\r\n}\r\n\r\nexport interface PeriodicElement {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n    description: string;\r\n}\r\n\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table with expandable rows <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\r\n                        <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\r\n                            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n                        <ng-container matColumnDef=\"expandedDetail\">\r\n                            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\r\n                                <div class=\"example-element-detail\"\r\n                                    [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\r\n                                    <div class=\"example-element-diagram\">\r\n                                        <div class=\"example-element-position\"> {{element.position}} </div>\r\n                                        <div class=\"example-element-symbol\"> {{element.symbol}} </div>\r\n                                        <div class=\"example-element-name\"> {{element.name}} </div>\r\n                                        <div class=\"example-element-weight\"> {{element.weight}} </div>\r\n                                    </div>\r\n                                    <div class=\"example-element-description\">\r\n                                        {{element.description}}\r\n                                        <span class=\"example-element-description-attribution\"> -- Wikipedia </span>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n                        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\r\n                            [class.example-expanded-row]=\"expandedElement === element\"\r\n                            (click)=\"expandedElement = expandedElement === element ? null : element\">\r\n                        </tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\n\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\r\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\r\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\r\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\r\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\r\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\r\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\r\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\r\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\r\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' }\r\n];\r\n\r\n@Component({\r\n    selector: 'app-basictable',\r\n    templateUrl: './filterable.component.html',\r\n    styleUrls: ['./filterable.component.scss']\r\n})\r\nexport class FilterableComponent {\r\n    constructor(breakpointObserver: BreakpointObserver) {\r\n        breakpointObserver.observe(['(max-width: 600px)']).subscribe(result => {\r\n            this.displayedColumns = result.matches ?\r\n                ['position', 'name', 'weight', 'symbol'] :\r\n                ['position', 'name', 'weight', 'symbol'];\r\n        });\r\n    }\r\n\r\n    displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n    dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\r\n\r\n    applyFilter(filterValue: string) {\r\n        filterValue = filterValue.trim(); // Remove whitespace\r\n        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n}\r\nexport interface Element {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-card-title>Filterable table</mat-card-title>\r\n        <div class=\"bg-light p-10 p-r-20 p-l-20\">\r\n          <mat-form-field>\r\n            <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search (Filter)\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"responsive-table\">\r\n          <mat-table #table [dataSource]=\"dataSource\">\r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"position\">\r\n              <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Weight Column -->\r\n            <ng-container matColumnDef=\"weight\">\r\n              <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Symbol Column -->\r\n            <ng-container matColumnDef=\"symbol\">\r\n              <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n          </mat-table>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nexport interface Transaction {\r\n    item: string;\r\n    cost: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-footerrowtable',\r\n    templateUrl: './footerrow-table.component.html',\r\n    styleUrls: ['./footerrow-table.component.scss']\r\n})\r\n\r\nexport class FooterrowTableComponent {\r\n    displayedColumns: string[] = ['item', 'cost'];\r\n    transactions: Transaction[] = [\r\n        { item: 'Beach ball', cost: 4 },\r\n        { item: 'Towel', cost: 5 },\r\n        { item: 'Frisbee', cost: 2 },\r\n        { item: 'Sunscreen', cost: 4 },\r\n        { item: 'Cooler', cost: 25 },\r\n        { item: 'Swim suit', cost: 15 },\r\n    ];\r\n\r\n    /** Gets the total cost of all transactions. */\r\n    getTotalCost() {\r\n        return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n    }\r\n}\r\n\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Footer row table <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8\">\r\n                        <!-- Item Column -->\r\n                        <ng-container matColumnDef=\"item\">\r\n                            <th mat-header-cell *matHeaderCellDef> Item </th>\r\n                            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\r\n                            <td mat-footer-cell *matFooterCellDef> Total </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Cost Column -->\r\n                        <ng-container matColumnDef=\"cost\">\r\n                            <th mat-header-cell *matHeaderCellDef> Cost </th>\r\n                            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\r\n                            <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                        <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { merge, Observable, of as observableOf } from 'rxjs';\r\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-http-table',\r\n    templateUrl: './http-table.component.html',\r\n    styleUrls: ['./http-table.component.scss']\r\n})\r\nexport class HttptableComponent implements AfterViewInit {\r\n    displayedColumns: string[] = ['created', 'state', 'number', 'title'];\r\n    exampleDatabase: ExampleHttpDatabase | null;\r\n    data: GithubIssue[] = [];\r\n\r\n    resultsLength = 0;\r\n    isLoadingResults = true;\r\n    isRateLimitReached = false;\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    constructor(private _httpClient: HttpClient) { }\r\n\r\n    ngAfterViewInit() {\r\n        this.exampleDatabase = new ExampleHttpDatabase(this._httpClient);\r\n\r\n        // If the user changes the sort order, reset back to the first page.\r\n        this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n        merge(this.sort.sortChange, this.paginator.page)\r\n            .pipe(\r\n                startWith({}),\r\n                switchMap(() => {\r\n                    this.isLoadingResults = true;\r\n                    return this.exampleDatabase!.getRepoIssues(\r\n                        this.sort.active, this.sort.direction, this.paginator.pageIndex);\r\n                }),\r\n                map(data => {\r\n                    // Flip flag to show that loading has finished.\r\n                    this.isLoadingResults = false;\r\n                    this.isRateLimitReached = false;\r\n                    this.resultsLength = data.total_count;\r\n\r\n                    return data.items;\r\n                }),\r\n                catchError(() => {\r\n                    this.isLoadingResults = false;\r\n                    // Catch if the GitHub API has reached its rate limit. Return empty data.\r\n                    this.isRateLimitReached = true;\r\n                    return observableOf([]);\r\n                })\r\n            ).subscribe(data => this.data = data);\r\n    }\r\n}\r\n\r\nexport interface GithubApi {\r\n    items: GithubIssue[];\r\n    total_count: number;\r\n}\r\n\r\nexport interface GithubIssue {\r\n    created_at: string;\r\n    number: string;\r\n    state: string;\r\n    title: string;\r\n}\r\n\r\n/** An example database that the data source uses to retrieve data for the table. */\r\nexport class ExampleHttpDatabase {\r\n    constructor(private _httpClient: HttpClient) { }\r\n\r\n    getRepoIssues(sort: string, order: string, page: number): Observable<GithubApi> {\r\n        const href = 'https://api.github.com/search/issues';\r\n        const requestUrl =\r\n            `${href}?q=repo:angular/components&sort=${sort}&order=${order}&page=${page + 1}`;\r\n\r\n        return this._httpClient.get<GithubApi>(requestUrl);\r\n    }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table retrieving data through HTTP <span class=\"label label-primary\">new</span>\r\n                </mat-card-title>\r\n\r\n                <div class=\"example-container m-t-20\">\r\n                    <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\r\n                        <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\r\n                        <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\r\n                            GitHub's API rate limit has been reached. It will be reset in one minute.\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"example-table-container responsive-table\">\r\n\r\n                        <table mat-table [dataSource]=\"data\" class=\"example-table\" matSort matSortActive=\"created\"\r\n                            matSortDisableClear matSortDirection=\"desc\">\r\n                            <!-- Number Column -->\r\n                            <ng-container matColumnDef=\"number\">\r\n                                <th mat-header-cell *matHeaderCellDef>#</th>\r\n                                <td mat-cell *matCellDef=\"let row\">{{row.number}}</td>\r\n                            </ng-container>\r\n\r\n                            <!-- Title Column -->\r\n                            <ng-container matColumnDef=\"title\">\r\n                                <th mat-header-cell *matHeaderCellDef>Title</th>\r\n                                <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\r\n                            </ng-container>\r\n\r\n                            <!-- State Column -->\r\n                            <ng-container matColumnDef=\"state\">\r\n                                <th mat-header-cell *matHeaderCellDef>State</th>\r\n                                <td mat-cell *matCellDef=\"let row\">{{row.state}}</td>\r\n                            </ng-container>\r\n\r\n                            <!-- Created Column -->\r\n                            <ng-container matColumnDef=\"created\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\r\n                                    Created\r\n                                </th>\r\n                                <td mat-cell *matCellDef=\"let row\">{{row.created_at | date}}</td>\r\n                            </ng-container>\r\n\r\n                            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <mat-paginator [length]=\"resultsLength\" [pageSize]=\"30\"></mat-paginator>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\n\r\n/** Constants used to fill up our data base. */\r\nconst COLORS = [\r\n    'maroon',\r\n    'red',\r\n    'orange',\r\n    'yellow',\r\n    'olive',\r\n    'green',\r\n    'purple',\r\n    'fuchsia',\r\n    'lime',\r\n    'teal',\r\n    'aqua',\r\n    'blue',\r\n    'navy',\r\n    'black',\r\n    'gray'\r\n];\r\n\r\nconst NAMES = [\r\n    'Maia',\r\n    'Asher',\r\n    'Olivia',\r\n    'Atticus',\r\n    'Amelia',\r\n    'Jack',\r\n    'Charlotte',\r\n    'Theodore',\r\n    'Isla',\r\n    'Oliver',\r\n    'Isabella',\r\n    'Jasper',\r\n    'Cora',\r\n    'Levi',\r\n    'Violet',\r\n    'Arthur',\r\n    'Mia',\r\n    'Thomas',\r\n    'Elizabeth'\r\n];\r\n\r\n@Component({\r\n    selector: 'app-mix',\r\n    templateUrl: './mix.component.html',\r\n    styleUrls: ['./mix.component.scss']\r\n})\r\nexport class MixComponent implements AfterViewInit {\r\n    displayedColumns = ['id', 'name', 'progress', 'color'];\r\n    dataSource: MatTableDataSource<UserData>;\r\n\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n    constructor(breakpointObserver: BreakpointObserver) {\r\n\r\n        breakpointObserver.observe(['(max-width: 600px)']).subscribe(result => {\r\n            this.displayedColumns = result.matches ?\r\n                ['id', 'name', 'progress', 'color'] :\r\n                ['id', 'name', 'progress', 'color'];\r\n        });\r\n\r\n        // Create 100 users\r\n        const users: UserData[] = [];\r\n        for (let i = 1; i <= 100; i++) {\r\n            users.push(createNewUser(i));\r\n        }\r\n\r\n        // Assign the data to the data source for the table to render\r\n        this.dataSource = new MatTableDataSource(users);\r\n    }\r\n\r\n    /**\r\n     * Set the paginator and sort after the view init since this component will\r\n     * be able to query its view for the initialized paginator and sort.\r\n     */\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    applyFilter(filterValue: string) {\r\n        filterValue = filterValue.trim(); // Remove whitespace\r\n        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n}\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n    const name =\r\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\r\n        ' ' +\r\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\r\n        '.';\r\n\r\n    return {\r\n        id: id.toString(),\r\n        name: name,\r\n        progress: Math.round(Math.random() * 100).toString(),\r\n        color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\r\n    };\r\n}\r\n\r\nexport interface UserData {\r\n    id: string;\r\n    name: string;\r\n    progress: string;\r\n    color: string;\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Data table with sorting, pagination, and filtering.</mat-card-title>\r\n                <div class=\"bg-light p-10 p-r-20 p-l-20\">\r\n                    <mat-form-field>\r\n                        <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"responsive-table\">\r\n                    <mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                        <!-- ID Column -->\r\n                        <ng-container matColumnDef=\"id\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let row\"> {{row.id}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Progress Column -->\r\n                        <ng-container matColumnDef=\"progress\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Progress </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let row\"> {{row.progress}}% </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Color Column -->\r\n                        <ng-container matColumnDef=\"color\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Color </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.color}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                        </mat-row>\r\n                    </mat-table>\r\n\r\n                    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nimport { Transaction } from '../footerrow-table/footerrow-table.component';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-multiple-headerfooter',\r\n    templateUrl: './multiple-header-footer.component.html',\r\n    styleUrls: ['./multiple-header-footer.component.scss']\r\n})\r\n\r\nexport class MultipleheaderfooterTableComponent {\r\n    displayedColumns: string[] = ['item', 'cost'];\r\n    transactions: Transaction[] = [\r\n        { item: 'Beach ball', cost: 4 },\r\n        { item: 'Towel', cost: 5 },\r\n        { item: 'Frisbee', cost: 2 },\r\n        { item: 'Sunscreen', cost: 4 },\r\n        { item: 'Cooler', cost: 25 },\r\n        { item: 'Swim suit', cost: 15 },\r\n    ];\r\n\r\n    /** Gets the total cost of all transactions. */\r\n    getTotalCost() {\r\n        return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n    }\r\n}\r\n\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table with multiple header and footer rows <span class=\"label label-primary\">new</span>\r\n                </mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8\">\r\n                        <!-- Item Column -->\r\n                        <ng-container matColumnDef=\"item\">\r\n                            <th mat-header-cell *matHeaderCellDef> Item </th>\r\n                            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\r\n                            <td mat-footer-cell *matFooterCellDef> Total </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Cost Column -->\r\n                        <ng-container matColumnDef=\"cost\">\r\n                            <th mat-header-cell *matHeaderCellDef> Cost </th>\r\n                            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\r\n                            <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Item Description Column -->\r\n                        <ng-container matColumnDef=\"item-description\">\r\n                            <th mat-header-cell *matHeaderCellDef> Name of the item purchased </th>\r\n                        </ng-container>\r\n\r\n                        <!-- Cost Description Column -->\r\n                        <ng-container matColumnDef=\"cost-description\">\r\n                            <th mat-header-cell *matHeaderCellDef> Cost of the item in USD </th>\r\n                        </ng-container>\r\n\r\n                        <!-- Disclaimer column -->\r\n                        <ng-container matColumnDef=\"disclaimer\">\r\n                            <td mat-footer-cell *matFooterCellDef colspan=\"2\">\r\n                                Please note that the cost of items displayed are completely and totally made up.\r\n                            </td>\r\n                        </ng-container>\r\n\r\n                        <!-- The table will render two header rows, one data row per data object, and two footer rows. -->\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"example-first-header-row\">\r\n                        </tr>\r\n                        <tr mat-header-row *matHeaderRowDef=\"['item-description', 'cost-description']\"\r\n                            class=\"example-second-header-row\">\r\n                        </tr>\r\n\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                        <tr mat-footer-row *matFooterRowDef=\"displayedColumns\" class=\"example-first-footer-row\"></tr>\r\n                        <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\" class=\"example-second-footer-row\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\r\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\r\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\r\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\r\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\r\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\r\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\r\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\r\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\r\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' }\r\n];\r\n\r\n@Component({\r\n    selector: 'app-basictable',\r\n    templateUrl: './pagination.component.html',\r\n    styleUrls: ['./pagination.component.scss']\r\n})\r\nexport class PaginationComponent implements AfterViewInit {\r\n    displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n    dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\r\n\r\n    constructor(breakpointObserver: BreakpointObserver) {\r\n        breakpointObserver.observe(['(max-width: 600px)']).subscribe(result => {\r\n            this.displayedColumns = result.matches ?\r\n                ['position', 'name', 'weight', 'symbol'] :\r\n                ['position', 'name', 'weight', 'symbol'];\r\n        });\r\n    }\r\n\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n    /**\r\n     * Set the paginator after the view init since this component will\r\n     * be able to query its view for the initialized paginator.\r\n     */\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n    }\r\n}\r\nexport interface Element {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-card-title>Table with pagination</mat-card-title>\r\n        <div class=\"responsive-table\">\r\n          <mat-table #table [dataSource]=\"dataSource\">\r\n\r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"position\">\r\n              <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Weight Column -->\r\n            <ng-container matColumnDef=\"weight\">\r\n              <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Symbol Column -->\r\n            <ng-container matColumnDef=\"symbol\">\r\n              <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n          </mat-table>\r\n\r\n          <mat-paginator #paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 20]\">\r\n          </mat-paginator>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n    selector: 'app-row-context',\r\n    templateUrl: './row-context-table.component.html',\r\n    styleUrls: ['./row-context-table.component.scss']\r\n})\r\n\r\nexport class RowcontextTableComponent {\r\n    displayedColumns: string[] = ['$implicit', 'index', 'count', 'first', 'last', 'even', 'odd'];\r\n    data: string[] = ['one', 'two', 'three', 'four', 'five'];\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table showing each row context properties.\r\n                    <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"$implicit\">\r\n                            <th mat-header-cell *matHeaderCellDef> $implicit </th>\r\n                            <td mat-cell *matCellDef=\"let data\"> {{data}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"index\">\r\n                            <th mat-header-cell *matHeaderCellDef> index </th>\r\n                            <td mat-cell *matCellDef=\"let index = index\"> {{index}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"count\">\r\n                            <th mat-header-cell *matHeaderCellDef> count </th>\r\n                            <td mat-cell *matCellDef=\"let count = count\"> {{count}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"first\">\r\n                            <th mat-header-cell *matHeaderCellDef> first </th>\r\n                            <td mat-cell *matCellDef=\"let first = first\"> {{first}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"last\">\r\n                            <th mat-header-cell *matHeaderCellDef> last </th>\r\n                            <td mat-cell *matCellDef=\"let last = last\"> {{last}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"even\">\r\n                            <th mat-header-cell *matHeaderCellDef> even </th>\r\n                            <td mat-cell *matCellDef=\"let even = even\"> {{even}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Index Column -->\r\n                        <ng-container matColumnDef=\"odd\">\r\n                            <th mat-header-cell *matHeaderCellDef> odd </th>\r\n                            <td mat-cell *matCellDef=\"let odd = odd\"> {{odd}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nexport interface PeriodicElement {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n];\r\n\r\n@Component({\r\n    selector: 'app-selection',\r\n    templateUrl: './selection-table.component.html',\r\n    styleUrls: ['./selection-table.component.scss']\r\n})\r\n\r\nexport class SelectionTableComponent {\r\n    displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\r\n    dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\r\n    selection = new SelectionModel<PeriodicElement>(true, []);\r\n\r\n    /** Whether the number of selected elements matches the total number of rows. */\r\n    isAllSelected() {\r\n        const numSelected = this.selection.selected.length;\r\n        const numRows = this.dataSource.data.length;\r\n        return numSelected === numRows;\r\n    }\r\n\r\n    /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n    masterToggle() {\r\n        this.isAllSelected() ?\r\n            this.selection.clear() :\r\n            this.dataSource.data.forEach(row => this.selection.select(row));\r\n    }\r\n\r\n    /** The label for the checkbox on the passed row */\r\n    checkboxLabel(row?: PeriodicElement): string {\r\n        if (!row) {\r\n            return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n        }\r\n        return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n    }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table with selection\r\n                    <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"responsive-table\">\r\n                    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n                        <!-- Checkbox Column -->\r\n                        <ng-container matColumnDef=\"select\">\r\n                            <th mat-header-cell *matHeaderCellDef>\r\n                                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                    [aria-label]=\"checkboxLabel()\">\r\n                                </mat-checkbox>\r\n                            </th>\r\n                            <td mat-cell *matCellDef=\"let row\">\r\n                                <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                    (change)=\"$event ? selection.toggle(row) : null\"\r\n                                    [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\r\n                                </mat-checkbox>\r\n                            </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"position\">\r\n                            <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"weight\">\r\n                            <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                            <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\">\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\r\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\r\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\r\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\r\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\r\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\r\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\r\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\r\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\r\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' }\r\n];\r\n\r\n@Component({\r\n    selector: 'app-sortable',\r\n    templateUrl: './sortable.component.html',\r\n    styleUrls: ['./sortable.component.scss']\r\n})\r\nexport class SortableComponent implements AfterViewInit {\r\n    displayedColumns = ['position', 'name', 'weight', 'symbol'];\r\n    dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n    /**\r\n     * Set the sort after the view init since this component will\r\n     * be able to query its view for the initialized sort.\r\n     */\r\n    ngAfterViewInit() {\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n}\r\nexport interface Element {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Sortable table</mat-card-title>\r\n                <div class=\"table-rasponsive\">\r\n                    <mat-table #table [dataSource]=\"dataSource\" matSort style=\"max-height: 500px; overflow:auto;\">\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"position\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> No. </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"weight\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Weight </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                            <mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </mat-header-cell>\r\n                            <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                    </mat-table>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nexport interface PeriodicElement {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n];\r\n\r\n@Component({\r\n    selector: 'app-sticky-column',\r\n    templateUrl: './sticky-column-table.component.html',\r\n    styleUrls: ['./sticky-column-table.component.scss']\r\n})\r\n\r\nexport class StickycolumnTableComponent {\r\n    displayedColumns =\r\n        ['name', 'position', 'weight', 'symbol', 'position', 'weight', 'symbol', 'star'];\r\n    dataSource = ELEMENT_DATA;\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table with sticky columns\r\n                    <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"example-container responsive-table\">\r\n                    <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\" sticky>\r\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"position\">\r\n                            <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"weight\">\r\n                            <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                            <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Star Column -->\r\n                        <ng-container matColumnDef=\"star\" stickyEnd>\r\n                            <th mat-header-cell *matHeaderCellDef></th>\r\n                            <td mat-cell *matCellDef=\"let element\">\r\n                                <mat-icon>more_vert</mat-icon>\r\n                            </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nexport interface Transaction {\r\n    item: string;\r\n    cost: number;\r\n}\r\n\r\nexport interface PeriodicElement {\r\n    name: string;\r\n    position: number;\r\n    weight: number;\r\n    symbol: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\r\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\r\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\r\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\r\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\r\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\r\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\r\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\r\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\r\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\r\n];\r\n\r\n@Component({\r\n    selector: 'app-sticky-header-footer',\r\n    templateUrl: './sticky-header-footer-table.component.html',\r\n    styleUrls: ['./sticky-header-footer-table.component.scss']\r\n})\r\n\r\nexport class StickyheaderfooterTableComponent {\r\n    displayedColumns = ['item', 'cost'];\r\n    transactions: Transaction[] = [\r\n        { item: 'Beach ball', cost: 4 },\r\n        { item: 'Towel', cost: 5 },\r\n        { item: 'Frisbee', cost: 2 },\r\n        { item: 'Sunscreen', cost: 4 },\r\n        { item: 'Cooler', cost: 25 },\r\n        { item: 'Swim suit', cost: 15 },\r\n    ];\r\n\r\n    /** Gets the total cost of all transactions. */\r\n    getTotalCost() {\r\n        return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n    }\r\n\r\n\r\n    // Fixed header\r\n    displayedColumns1 = ['position', 'name', 'weight', 'symbol'];\r\n    dataSource = ELEMENT_DATA;\r\n}\r\n\r\n\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table with sticky footer\r\n                    <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"example-container responsive-table m-t-15\">\r\n                    <table mat-table [dataSource]=\"transactions\">\r\n                        <!-- Item Column -->\r\n                        <ng-container matColumnDef=\"item\">\r\n                            <th mat-header-cell *matHeaderCellDef> Item </th>\r\n                            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\r\n                            <td mat-footer-cell *matFooterCellDef> Total </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Cost Column -->\r\n                        <ng-container matColumnDef=\"cost\">\r\n                            <th mat-header-cell *matHeaderCellDef> Cost </th>\r\n                            <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\r\n                            <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                        <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Table with sticky header\r\n                    <span class=\"label label-primary\">new</span></mat-card-title>\r\n                <div class=\"example-container responsive-table m-t-15\">\r\n                    <table mat-table [dataSource]=\"dataSource\">\r\n\r\n                        <!-- Position Column -->\r\n                        <ng-container matColumnDef=\"position\">\r\n                            <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Weight Column -->\r\n                        <ng-container matColumnDef=\"weight\">\r\n                            <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Symbol Column -->\r\n                        <ng-container matColumnDef=\"symbol\">\r\n                            <th mat-header-cell *matHeaderCellDef> Symbol </th>\r\n                            <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns1; sticky: true\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns1;\"></tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import 'hammerjs';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DemoMaterialModule } from '../demo-material-module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { TablesRoutes } from './tables.routing';\r\n\r\n\r\nimport { BasicTableComponent } from './basic-table/basic-table.component';\r\nimport { FilterableComponent } from './filterable/filterable.component';\r\nimport { PaginationComponent } from './pagination/pagination.component';\r\nimport { SortableComponent } from './sortable/sortable.component';\r\nimport { MixComponent } from './mix/mix.component';\r\nimport { DynamicTableComponent } from './dynamic-table/dynamic-table.component';\r\nimport { ExpandTableComponent } from './expand-table/expand-table.component';\r\nimport { FooterrowTableComponent } from './footerrow-table/footerrow-table.component';\r\nimport { MultipleheaderfooterTableComponent } from './multiple-header-footer/multiple-header-footer.component';\r\nimport { HttptableComponent } from './http-table/http-table.component';\r\nimport { RowcontextTableComponent } from './row-context-table/row-context-table.component';\r\nimport { SelectionTableComponent } from './selection-table/selection-table.component';\r\nimport { StickycolumnTableComponent } from './sticky-column-table/sticky-column-table.component';\r\nimport { StickyheaderfooterTableComponent } from './sticky-header-footer-table/sticky-header-footer-table.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(TablesRoutes),\r\n        DemoMaterialModule,\r\n        FlexLayoutModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [\r\n        BasicTableComponent,\r\n        FilterableComponent,\r\n        PaginationComponent,\r\n        SortableComponent,\r\n        MixComponent,\r\n        DynamicTableComponent,\r\n        ExpandTableComponent,\r\n        FooterrowTableComponent,\r\n        MultipleheaderfooterTableComponent,\r\n        HttptableComponent,\r\n        RowcontextTableComponent,\r\n        SelectionTableComponent,\r\n        StickycolumnTableComponent,\r\n        StickyheaderfooterTableComponent\r\n    ]\r\n})\r\nexport class TablesModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { BasicTableComponent } from './basic-table/basic-table.component';\r\nimport { FilterableComponent } from './filterable/filterable.component';\r\nimport { PaginationComponent } from './pagination/pagination.component';\r\nimport { SortableComponent } from './sortable/sortable.component';\r\nimport { MixComponent } from './mix/mix.component';\r\nimport { DynamicTableComponent } from './dynamic-table/dynamic-table.component';\r\nimport { ExpandTableComponent } from './expand-table/expand-table.component';\r\nimport { FooterrowTableComponent } from './footerrow-table/footerrow-table.component';\r\nimport { MultipleheaderfooterTableComponent } from './multiple-header-footer/multiple-header-footer.component';\r\nimport { HttptableComponent } from './http-table/http-table.component';\r\nimport { RowcontextTableComponent } from './row-context-table/row-context-table.component';\r\nimport { SelectionTableComponent } from './selection-table/selection-table.component';\r\nimport { StickycolumnTableComponent } from './sticky-column-table/sticky-column-table.component';\r\nimport { StickyheaderfooterTableComponent } from './sticky-header-footer-table/sticky-header-footer-table.component';\r\n\r\nexport const TablesRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: 'basictable',\r\n                component: BasicTableComponent,\r\n                data: {\r\n                    title: 'Basic Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Basic Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'filterable',\r\n                component: FilterableComponent,\r\n                data: {\r\n                    title: 'Filter Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Filter Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'pagination',\r\n                component: PaginationComponent,\r\n                data: {\r\n                    title: 'Pagination Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Pagination Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'sortable',\r\n                component: SortableComponent,\r\n                data: {\r\n                    title: 'Sortable',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Sortable' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'mix',\r\n                component: MixComponent,\r\n                data: {\r\n                    title: 'Mix Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Mix Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'dynamic-table',\r\n                component: DynamicTableComponent,\r\n                data: {\r\n                    title: 'Dynamic Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Dynamic Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'expand-table',\r\n                component: ExpandTableComponent,\r\n                data: {\r\n                    title: 'Expand Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Expand Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'footerrow-table',\r\n                component: FooterrowTableComponent,\r\n                data: {\r\n                    title: 'Footer row Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Footer row Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'multiple-header-footer',\r\n                component: MultipleheaderfooterTableComponent,\r\n                data: {\r\n                    title: 'Multiple Header Footer',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Multiple Header Footer' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'http-table',\r\n                component: HttptableComponent,\r\n                data: {\r\n                    title: 'HTTP Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'HTTP Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'row-context-table',\r\n                component: RowcontextTableComponent,\r\n                data: {\r\n                    title: 'Row Context Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Row Context Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'selection-table',\r\n                component: SelectionTableComponent,\r\n                data: {\r\n                    title: 'Selection Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Selection Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'sticky-column-table',\r\n                component: StickycolumnTableComponent,\r\n                data: {\r\n                    title: 'Sticky Column Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Sticky Column Table' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'sticky-footer-table',\r\n                component: StickyheaderfooterTableComponent,\r\n                data: {\r\n                    title: 'Sticky Header Footer Table',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Sticky Header Footer Table' }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n];\r\n"]}