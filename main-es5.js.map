{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/demo-material-module.ts","webpack:///src/app/layouts/blank/blank.component.ts","webpack:///src/app/layouts/blank/blank.component.html","webpack:///src/app/layouts/full/breadcrumb/breadcrumb.component.ts","webpack:///src/app/layouts/full/breadcrumb/breadcrumb.component.html","webpack:///src/app/layouts/full/full.component.ts","webpack:///src/app/layouts/full/full.component.html","webpack:///src/app/layouts/full/header/header.component.ts","webpack:///src/app/layouts/full/header/header.component.html","webpack:///src/app/layouts/full/sidebar/sidebar.component.ts","webpack:///src/app/layouts/full/sidebar/sidebar.component.html","webpack:///src/app/shared/accordion/accordion.directive.ts","webpack:///src/app/shared/accordion/accordionanchor.directive.ts","webpack:///src/app/shared/accordion/accordionlink.directive.ts","webpack:///src/app/shared/accordion/index.ts","webpack:///src/app/shared/menu-items/menu-items.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/spinner.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","today","Date","now","selector","templateUrl","styleUrls","DEFAULT_PERFECT_SCROLLBAR_CONFIG","suppressScrollX","wheelSpeed","wheelPropagation","AppModule","provide","useValue","forRoot","declarations","imports","providers","bootstrap","AppRoutes","path","component","children","redirectTo","pathMatch","loadChildren","m","DashboardsModule","MaterialComponentsModule","AppsModule","FormModule","TablesModule","TreeModule","DataTablesModule","PagesModule","WidgetsModule","ChartslibModule","MultiModule","AuthenticationModule","DemoMaterialModule","AppBlankComponent","AppBreadcrumbComponent","router","activatedRoute","titleService","events","pipe","event","route","firstChild","outlet","data","subscribe","setTitle","pageInfo","FullComponent","changeDetectorRef","media","menuItems","dir","status","showSearch","config","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","removeListener","clickEvent","AppHeaderComponent","notifications","round","icon","title","subject","time","mymessages","useravatar","from","AppSidebarComponent","itemSelect","i","j","parentIndex","childIndex","document","querySelector","scroll","top","left","AccordionDirective","navlinks","setTimeout","checkOpenLinks","selectedLink","forEach","link","selected","push","index","indexOf","splice","group","routeUrl","url","currentUrl","split","closeOtherLinks","filter","AccordionAnchorDirective","navlink","toggle","AccordionLinkDirective","nav","addLink","removeGroup","_selected","value","MENUITEMS","state","name","type","MenuItems","SharedModule","SpinnerComponent","isSpinnerVisible","backgroundColor","template","encapsulation","None","Document","environment","production","bootstrapModule","catch","err","console","log"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component, Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  today = Date.now();\r\n  constructor( ) {}\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<router-outlet>\r\n    <app-spinner></app-spinner>\r\n</router-outlet>\r\n","import * as $ from 'jquery';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { AppRoutes } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppBlankComponent } from './layouts/blank/blank.component';\r\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\nimport { AppBreadcrumbComponent } from './layouts/full/breadcrumb/breadcrumb.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule } from './demo-material-module';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\n\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { SpinnerComponent } from './shared/spinner.component';\r\n\r\n\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n    suppressScrollX: true,\r\n    wheelSpeed: 2,\r\n    wheelPropagation: true\r\n};\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        FullComponent,\r\n        AppHeaderComponent,\r\n        SpinnerComponent,\r\n        AppBlankComponent,\r\n        AppSidebarComponent,\r\n        AppBreadcrumbComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        DemoMaterialModule,\r\n        FormsModule,\r\n        FlexLayoutModule,\r\n        HttpClientModule,\r\n        PerfectScrollbarModule,\r\n        SharedModule,\r\n        NgMultiSelectDropDownModule.forRoot(),\r\n        RouterModule.forRoot(AppRoutes)\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: PERFECT_SCROLLBAR_CONFIG,\r\n            useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n        }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppBlankComponent } from './layouts/blank/blank.component';\r\n\r\nexport const AppRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: FullComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                redirectTo: '/authentication/login',\r\n                pathMatch: 'full'\r\n            },\r\n            {\r\n                path: 'dashboards',\r\n                loadChildren: () => import('./dashboards/dashboards.module').then(m => m.DashboardsModule)\r\n            },\r\n            {\r\n                path: 'material',\r\n                loadChildren: () => import('./material-component/material.module').then(m => m.MaterialComponentsModule)\r\n            },\r\n            {\r\n                path: 'apps',\r\n                loadChildren: () => import('./apps/apps.module').then(m => m.AppsModule)\r\n            },\r\n            {\r\n                path: 'forms',\r\n                loadChildren: () => import('./forms/forms.module').then(m => m.FormModule)\r\n            },\r\n            {\r\n                path: 'tables',\r\n                loadChildren: () => import('./tables/tables.module').then(m => m.TablesModule)\r\n            },\r\n            {\r\n                path: 'tree',\r\n                loadChildren: () => import('./tree/tree.module').then(m => m.TreeModule)\r\n            },\r\n            {\r\n                path: 'datatables',\r\n                loadChildren: () => import('./datatables/datatables.module').then(m => m.DataTablesModule)\r\n            },\r\n            {\r\n                path: 'pages',\r\n                loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)\r\n            },\r\n            {\r\n                path: 'widgets',\r\n                loadChildren: () => import('./widgets/widgets.module').then(m => m.WidgetsModule)\r\n            },\r\n            {\r\n                path: 'charts',\r\n                loadChildren: () => import('./charts/chartslib.module').then(m => m.ChartslibModule)\r\n            },\r\n            {\r\n                path: 'multi',\r\n                loadChildren: () => import('./multi-dropdown/multi-dd.module').then(m => m.MultiModule)\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: '',\r\n        component: AppBlankComponent,\r\n        children: [\r\n            {\r\n                path: 'authentication',\r\n                loadChildren:\r\n                    () => import('./authentication/authentication.module').then(m => m.AuthenticationModule)\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: 'authentication/404'\r\n    }\r\n];\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\n\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required to serve the demo-app.\r\n */\r\n@NgModule({\r\n    exports: [\r\n        MatAutocompleteModule,\r\n        MatButtonModule,\r\n        MatBottomSheetModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatTableModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatBadgeModule,\r\n        MatSidenavModule,\r\n        MatSlideToggleModule,\r\n        MatSliderModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatStepperModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatNativeDateModule,\r\n        CdkTableModule,\r\n        A11yModule,\r\n        BidiModule,\r\n        CdkAccordionModule,\r\n        ObserversModule,\r\n        OverlayModule,\r\n        PlatformModule,\r\n        PortalModule\r\n    ]\r\n})\r\nexport class DemoMaterialModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-blank',\r\n  templateUrl: './blank.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppBlankComponent {}\r\n","<!-- ============================================================== -->\r\n<!-- Only router without any element -->\r\n<!-- ============================================================== -->\r\n<mat-sidenav-container>\r\n  <router-outlet></router-outlet>\r\n</mat-sidenav-container>","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  NgZone,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n  HostListener,\r\n  Directive,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { filter, map, mergeMap } from 'rxjs/operators';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppBreadcrumbComponent implements OnInit {\r\n  @Input() layout;\r\n  pageInfo;\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private titleService: Title\r\n  ) {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .pipe(map(() => this.activatedRoute))\r\n      .pipe(\r\n        map(route => {\r\n          while (route.firstChild) {\r\n            route = route.firstChild;\r\n          }\r\n          return route;\r\n        })\r\n      )\r\n      .pipe(filter(route => route.outlet === 'primary'))\r\n      .pipe(mergeMap(route => route.data))\r\n      .subscribe(event => {\r\n        this.titleService.setTitle(event['title']);\r\n        this.pageInfo = event;\r\n      });\r\n  }\r\n  ngOnInit() {}\r\n}\r\n","<!-- Breadcrumb -->\r\n\r\n<div class=\"page-breadcrumb p-t-20 p-b-20 p-l-30 p-r-30\">\r\n\t<div fxLayout=\"row wrap\">\r\n        <div fxFlex.gt-sm=\"60\" fxFlex.gt-xs=\"60\" fxFlex=\"100\" class=\"align-self-center\">\r\n            <h4 class=\"page-title text-themecolor m-0\">{{pageInfo?.title}}</h4>\r\n\t\t</div>\r\n\t\t<div fxFlex.gt-sm=\"40\" fxFlex.gt-xs=\"40\" fxFlex=\"100\" class=\"align-self-center\">\r\n            <div class=\"breadcrumb d-flex align-items-center float-right float-sm-left\">\r\n                <ul class=\"list-style-none d-flex align-items-center\">\r\n                    <ng-template ngFor let-url [ngForOf]=\"pageInfo?.urls\" let-last=\"last\">\r\n                        <li class=\"breadcrumb-item\" *ngIf=\"!last\" [routerLink]=\"url.url\">\r\n                            <a href='javascript:void(0)'>{{url.title}}</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\" *ngIf=\"last\">{{url.title}}</li>\r\n                    </ng-template>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  NgZone,\r\n  OnDestroy,\r\n  ViewChild,\r\n  HostListener,\r\n  Directive\r\n} from '@angular/core';\r\nimport { MenuItems } from '../../shared/menu-items/menu-items';\r\nimport { AppHeaderComponent } from './header/header.component';\r\nimport { AppSidebarComponent } from './sidebar/sidebar.component';\r\nimport { AppBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\r\n\r\nimport { PerfectScrollbarConfigInterface, PerfectScrollbarDirective } from 'ngx-perfect-scrollbar';\r\n\r\n/** @title Responsive sidenav */\r\n@Component({\r\n  selector: 'app-full-layout',\r\n  templateUrl: 'full.component.html',\r\n  styleUrls: []\r\n})\r\nexport class FullComponent implements OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n  dir = 'ltr';\r\n  green: boolean;\r\n  blue: boolean;\r\n  dark: boolean;\r\n  minisidebar: boolean;\r\n  boxed: boolean;\r\n  danger: boolean;\r\n  showHide: boolean;\r\n  url: string;\r\n  sidebarOpened;\r\n  status = false;\r\n  \r\n  public showSearch = false;\r\n\r\n  public config: PerfectScrollbarConfigInterface = {};\r\n  private _mobileQueryListener: () => void;\r\n\r\n  clickEvent() {\r\n    this.status = !this.status;\r\n  }\r\n  \r\n\r\n  constructor(\r\n    public router: Router,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n\r\n\r\n  // Mini sidebar\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<div class=\"main-container\" [dir]=\"dir\"\r\n  [ngClass]=\"{'minisidebar': minisidebar, 'boxed': boxed, 'danger': danger, 'blue': blue, 'green': green, 'dark': dark }\">\r\n  <!-- ============================================================== -->\r\n  <!-- Topbar - style you can find in header.scss -->\r\n  <!-- ============================================================== -->\r\n  <mat-toolbar color=\"primary\" class=\"topbar telative\">\r\n    <!-- ============================================================== -->\r\n    <!-- Logo - style you can find in header.scss -->\r\n    <!-- ============================================================== -->\r\n    <div class=\"navbar-header\">\r\n      <a class=\"navbar-brand\" href=\"/\">\r\n        <!-- Logo icon -->\r\n        <b>\r\n          <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\r\n          <!-- Dark Logo icon -->\r\n          <!-- <img src=\"assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\"> -->\r\n          <!-- Light Logo icon -->\r\n          <!-- <img src=\"assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\"> -->\r\n          Logo\r\n        </b>\r\n        <!--End Logo icon -->\r\n        <!-- Logo text -->\r\n        <span fxShow=\"false\" fxShow.gt-xs>\r\n          <!-- dark Logo text -->\r\n          <!-- <img src=\"assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\"> -->\r\n          <!-- Light Logo text -->\r\n          <!-- <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\"> -->\r\n        </span>\r\n      </a>\r\n    </div>\r\n    <!-- ============================================================== -->\r\n    <!-- sidebar toggle -->\r\n    <!-- ============================================================== -->\r\n\r\n    <button mat-icon-button (click)=\"snav.toggle() && clickEvent()\" value=\"sidebarclosed\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n \r\n    <span fxFlex></span>\r\n    <!-- ============================================================== -->\r\n    <!-- app header component - style you can find in header.scss / header.component.ts-->\r\n    <!-- ============================================================== -->\r\n    <app-header></app-header>\r\n    <!-- ============================================================== -->\r\n    <!-- Right sidebar toggle - style you can find in rightsidebar.component.scss -->\r\n    <!-- ============================================================== -->\r\n    <button (click)=\"end.toggle()\" mat-icon-button class=\"ml-xs overflow-visible\">\r\n      <mat-icon>settings</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n  <!-- ============================================================== -->\r\n  <!-- End Topbar - style you can find in pages.scss -->\r\n  <!-- ============================================================== -->\r\n  <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\"\r\n    [ngClass]=\"{'minisidebar': minisidebar}\">\r\n    <!-- ============================================================== -->\r\n    <!-- Sidebar - style you can find in sidebar.scss -->\r\n    <!-- ============================================================== -->\r\n    <mat-sidenav #snav id=\"snav\" class=\"pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\" fixedTopGap=\"0\"\r\n      [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\" (open)=\"sidebarOpened = true\"\r\n      (close)=\"sidebarOpened = false\" [perfectScrollbar]=\"config\">\r\n\r\n      <app-sidebar class=\"app-sidebar\"></app-sidebar>\r\n\r\n    </mat-sidenav>\r\n    <!-- ============================================================== -->\r\n    <!-- Sidebar - style you can find in sidebar.scss -->\r\n    <!-- ============================================================== -->\r\n    <!-- ============================================================== -->\r\n    <!-- Right Sidebar - style you can find in rightsidebar.component.scss -->\r\n    <!-- ============================================================== -->\r\n    <mat-sidenav #end position=\"end\" class=\"chat-panel\" mode=\"over\" opened=\"false\">\r\n      <div class=\"scroll\">\r\n        <mat-nav-list>\r\n\r\n          <h3 mat-subheader class=\"text-uppercase font-weight-bold\">Settings</h3>\r\n          <mat-list-item>\r\n            <mat-slide-toggle color=\"warn\" (change)=\"dir = (dir == 'rtl' ? 'ltr' : 'rtl')\">RTL</mat-slide-toggle>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <mat-slide-toggle color=\"warn\" [(ngModel)]=\"boxed\">Boxed Layout</mat-slide-toggle>\r\n          </mat-list-item>\r\n          <!--<mat-list-item>\r\n                    <mat-slide-toggle [(ngModel)]=\"minisidebar\">Mini Sidebar</mat-slide-toggle>\r\n                  </mat-list-item>    -->\r\n          <mat-divider></mat-divider>\r\n          <h3 mat-subheader class=\"text-uppercase font-weight-bold\">Colors</h3>\r\n          <mat-list-item>\r\n            <mat-checkbox color=\"warn\" [(ngModel)]=\"danger\" (change)=\"green = blue = false\" class=\"text-danger\">Red\r\n            </mat-checkbox>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <mat-checkbox color=\"warn\" [(ngModel)]=\"green\" (change)=\"danger = blue = false\" class=\"text-megna\">Teal\r\n              Green</mat-checkbox>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <mat-checkbox color=\"warn\" [(ngModel)]=\"blue\" (change)=\"green = danger = false\" class=\"text-info\">Blue\r\n            </mat-checkbox>\r\n          </mat-list-item>\r\n          <mat-list-item>\r\n            <mat-checkbox color=\"warn\" [(ngModel)]=\"dark\" (change)=\"green = blue = danger = false\">Dark</mat-checkbox>\r\n          </mat-list-item>\r\n        </mat-nav-list>\r\n      </div>\r\n    </mat-sidenav>\r\n\r\n    <!-- ============================================================== -->\r\n    <!-- Page container - style you can find in pages.scss -->\r\n    <!-- ============================================================== -->\r\n    <mat-sidenav-content class=\"page-wrapper\" [ngClass]=\"status ? 'minitoggle' : ''\">\r\n\r\n      <app-breadcrumb></app-breadcrumb>\r\n      <div class=\"page-content\">\r\n        <router-outlet>\r\n          <app-spinner></app-spinner>\r\n        </router-outlet>\r\n\r\n      </div>\r\n\r\n    </mat-sidenav-content>\r\n    <!-- ============================================================== -->\r\n    <!-- Page container - style you can find in pages.scss -->\r\n    <!-- ============================================================== -->\r\n  </mat-sidenav-container>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppHeaderComponent {\r\n  public config: PerfectScrollbarConfigInterface = {};\r\n\r\n\r\n  // This is for Notifications\r\n  notifications: Object[] = [\r\n    {\r\n      round: 'round-danger',\r\n      icon: 'ti-link',\r\n      title: 'Launch Admin',\r\n      subject: 'Just see the my new admin!',\r\n      time: '9:30 AM'\r\n    },\r\n    {\r\n      round: 'round-success',\r\n      icon: 'ti-calendar',\r\n      title: 'Event today',\r\n      subject: 'Just a reminder that you have event',\r\n      time: '9:10 AM'\r\n    },\r\n    {\r\n      round: 'round-info',\r\n      icon: 'ti-settings',\r\n      title: 'Settings',\r\n      subject: 'You can customize this template as you want',\r\n      time: '9:08 AM'\r\n    },\r\n    {\r\n      round: 'round-primary',\r\n      icon: 'ti-user',\r\n      title: 'Pavan kumar',\r\n      subject: 'Just see the my admin!',\r\n      time: '9:00 AM'\r\n    }\r\n  ];\r\n\r\n  // This is for Mymessages\r\n  mymessages: Object[] = [\r\n    {\r\n      useravatar: 'assets/images/users/1.jpg',\r\n      status: 'online',\r\n      from: 'Pavan kumar',\r\n      subject: 'Just see the my admin!',\r\n      time: '9:30 AM'\r\n    },\r\n    {\r\n      useravatar: 'assets/images/users/2.jpg',\r\n      status: 'busy',\r\n      from: 'Sonu Nigam',\r\n      subject: 'I have sung a song! See you at',\r\n      time: '9:10 AM'\r\n    },\r\n    {\r\n      useravatar: 'assets/images/users/2.jpg',\r\n      status: 'away',\r\n      from: 'Arijit Sinh',\r\n      subject: 'I am a singer!',\r\n      time: '9:08 AM'\r\n    },\r\n    {\r\n      useravatar: 'assets/images/users/4.jpg',\r\n      status: 'offline',\r\n      from: 'Pavan kumar',\r\n      subject: 'Just see the my admin!',\r\n      time: '9:00 AM'\r\n    }\r\n  ];\r\n}\r\n","\r\n<!-- ============================================================== -->\r\n<!-- Profile - style you can find in header.scss -->\r\n<!-- ============================================================== -->\r\n<button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\">\r\n    <img src=\"assets/images/users/1.jpg\" alt=\"user\" class=\"profile-pic\"> </button>\r\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\r\n    <button mat-menu-item>\r\n        <mat-icon>settings</mat-icon> Settings </button>\r\n    <button mat-menu-item>\r\n        <mat-icon>account_box</mat-icon> Profile </button>\r\n    <button mat-menu-item>\r\n        <mat-icon>notifications_off</mat-icon> Disable notifications </button>\r\n    <button mat-menu-item>\r\n        <mat-icon>exit_to_app</mat-icon> Sign Out </button>\r\n</mat-menu>","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  NgZone,\r\n  OnDestroy,\r\n  ViewChild,\r\n  HostListener,\r\n  Directive,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\n\r\n\r\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppSidebarComponent implements OnDestroy {\r\n  public config: PerfectScrollbarConfigInterface = {};\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n  status: boolean = true;\r\n  \r\n  itemSelect:number[]=[]\r\n  parentIndex : Number;\r\n  childIndex : Number;\r\n\r\n  setClickedRow(i,j){\r\n   this.parentIndex=i;\r\n   this.childIndex = j;\r\n  }\r\n  subclickEvent() {\r\n    this.status = true;\r\n  }\r\n  scrollToTop(){\r\n  \tdocument.querySelector('.page-wrapper').scroll({\r\n  \ttop: 0,\r\n  \tleft: 0\r\n\t});\r\n  }\t\r\n  \r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- sidebar -->\r\n<!-- ============================================================== -->\r\n<div class=\"user-profile\" style=\"background: url(assets/images/background/user-info.jpg) no-repeat;\">\r\n    <!-- User profile image -->\r\n    <div class=\"profile-img\">\r\n        <img src=\"assets/images/users/profile.png\" alt=\"user\"> </div>\r\n    <!-- User profile text-->\r\n    <!-- ============================================================== -->\r\n    <!-- Profile - style you can find in header.scss -->\r\n    <!-- ============================================================== -->\r\n    <div class=\"profile-text\">\r\n        <a [matMenuTriggerFor]=\"sdprofile\" class=\"\"> Markarn Doe\r\n            <i class=\"ti-angle-down font-12 m-l-5\"></i>\r\n        </a>\r\n    </div>\r\n    <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">\r\n        <button mat-menu-item>\r\n            <mat-icon>settings</mat-icon> Settings\r\n        </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>account_box</mat-icon> Profile\r\n        </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>notifications_off</mat-icon> Disable notifications\r\n        </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>exit_to_app</mat-icon> Sign Out\r\n        </button>\r\n    </mat-menu>\r\n</div>\r\n\r\n<mat-nav-list appAccordion>\r\n    <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuItems.getMenuitem()\" routerLinkActive=\"selected\" group=\"{{menuitem.state}}\" (click)=\"scrollToTop()\">\r\n        <a class=\"\" appAccordionToggle [routerLink]=\"['/', menuitem.state]\" *ngIf=\"menuitem.type === 'link'\">\r\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\r\n            <span>{{ menuitem.name }}</span>\r\n            <span fxFlex></span>\r\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\r\n        </a>\r\n\r\n        <a class=\"\" appAccordionToggle href=\"{{menuitem.state}}\" *ngIf=\"menuitem.type === 'extLink'\">\r\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\r\n            <span>{{ menuitem.name }}</span>\r\n            <span fxFlex></span>\r\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\r\n        </a>\r\n        <a class=\"\" appAccordionToggle href=\"{{menuitem.state}}\" target=\"_blank\" *ngIf=\"menuitem.type === 'extTabLink'\">\r\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\r\n            <span>{{ menuitem.name}}</span>\r\n            <span fxFlex></span>\r\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\r\n        </a>\r\n\r\n        <a class=\"\" appAccordionToggle href=\"javascript:;\" *ngIf=\"menuitem.type === 'sub'\">\r\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\r\n            <span>{{ menuitem.name }}</span>\r\n            <span fxFlex></span>\r\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\r\n            <mat-icon class=\"dd-icon\">keyboard_arrow_down</mat-icon>\r\n        </a>\r\n        <mat-nav-list class=\"sub-item\" *ngIf=\"menuitem.type === 'sub'\" >\r\n            <mat-list-item *ngFor=\"let childitem of menuitem.children; let j=index; let i = childitem\" routerLinkActive=\"selected\">\r\n                <a [routerLink]=\"['/', menuitem.state, childitem.state ]\"  *ngIf=\"childitem.type === 'link'\" class=\"relative\"\r\n                    routerLinkActive=\"selected\" (click)=\"itemSelect[i]=j\">{{ childitem.name}}</a>\r\n            </mat-list-item>\r\n            <mat-list-item *ngFor=\"let childitem of menuitem.children; let j=index; let i=childitem\">\r\n                <a class=\"\" href=\"javascript: void(0);\" *ngIf=\"childitem.type === 'subchild'\" (click)=\"itemSelect[i]=j\"\r\n                    [ngClass]=\"j==itemSelect[i]? 'selected' : ''\">\r\n                    <span>{{ childitem.name }}</span>\r\n                    <span fxFlex></span>\r\n                    <mat-icon class=\"dd-icon\">keyboard_arrow_down</mat-icon>\r\n                </a>\r\n                <mat-nav-list class=\"child-sub-item\" *ngIf=\"childitem.type === 'subchild'\" >\r\n                    <mat-list-item *ngFor=\"let child of childitem.subchildren\" routerLinkActive=\"selected\">\r\n                        <a [routerLink]=\"['/', menuitem.state, childitem.state, child.state ]\" routerLinkActive=\"selected\" >{{child.name}}</a>\r\n                    </mat-list-item>\r\n                </mat-nav-list>\r\n            </mat-list-item>\r\n\r\n        </mat-nav-list>\r\n\r\n        <div class=\"saperator text-muted\" *ngIf=\"menuitem.type === 'saperator'\">\r\n            <span>{{ menuitem.name }}</span>\r\n        </div>\r\n    </mat-list-item>\r\n</mat-nav-list>","import {\r\n  Directive,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport 'rxjs/add/operator/filter';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events\r\n      .filter(event => event instanceof NavigationEnd)\r\n      .subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n    \r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n    \r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","export * from './accordionanchor.directive';\r\nexport * from './accordionlink.directive';\r\nexport * from './accordion.directive';\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface BadgeItem {\r\n    type: string;\r\n    value: string;\r\n}\r\nexport interface Saperator {\r\n    name: string;\r\n    type?: string;\r\n}\r\nexport interface SubChildren {\r\n    state: string;\r\n    name: string;\r\n    type?: string;\r\n}\r\nexport interface ChildrenItems {\r\n    state: string;\r\n    name: string;\r\n    type?: string;\r\n    child?: SubChildren[];\r\n}\r\n\r\nexport interface Menu {\r\n    state: string;\r\n    name: string;\r\n    type: string;\r\n    icon: string;\r\n    badge?: BadgeItem[];\r\n    saperator?: Saperator[];\r\n    children?: ChildrenItems[];\r\n}\r\n\r\nconst MENUITEMS = [\r\n    {\r\n        state: '',\r\n        name: 'Personal',\r\n        type: 'saperator',\r\n        icon: 'av_timer'\r\n    },\r\n    {\r\n        state: 'dashboards',\r\n        name: 'Dashboards',\r\n        type: 'sub',\r\n        icon: 'av_timer',\r\n        children: [\r\n            { state: 'dashboard1', name: 'Live data', type: 'link' },\r\n            { state: 'dashboard2', name: 'Detailed view', type: 'link' }\r\n        ]\r\n    },{\r\n      state: 'authentication',\r\n      name: 'Auth',\r\n      type: 'sub',\r\n      icon: 'perm_contact_calendar',\r\n      children: [\r\n          { state: 'login', name: 'Login', type: 'link' },\r\n      ]\r\n  },\r\n  {\r\n      state: 'apps',\r\n      name: 'Apps',\r\n      type: 'sub',\r\n      icon: 'apps',\r\n      children: [\r\n          { state: 'employeelist', name: 'Employees', type: 'link' },\r\n          { state: 'productlist', name: 'Product List', type: 'link' },\r\n      ]\r\n  }\r\n];\r\n\r\n@Injectable()\r\nexport class MenuItems {\r\n    getMenuitem(): Menu[] {\r\n        return MENUITEMS;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MenuItems } from './menu-items/menu-items';\r\nimport {\r\n  AccordionAnchorDirective,\r\n  AccordionLinkDirective,\r\n  AccordionDirective\r\n} from './accordion';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  providers: [MenuItems]\r\n})\r\nexport class SharedModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  Inject,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {\r\n  Router,\r\n  NavigationStart,\r\n  NavigationEnd,\r\n  NavigationCancel,\r\n  NavigationError\r\n} from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\r\n        <div class=\"spinner\">\r\n          <div class=\"double-bounce1\"></div>\r\n          <div class=\"double-bounce2\"></div>\r\n        </div>\r\n    </div>`,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n  public isSpinnerVisible = true;\r\n\r\n  @Input() public backgroundColor = 'rgba(0, 115, 170, 0.69)';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    this.router.events.subscribe(\r\n      event => {\r\n        if (event instanceof NavigationStart) {\r\n          this.isSpinnerVisible = true;\r\n        } else if (\r\n          event instanceof NavigationEnd ||\r\n          event instanceof NavigationCancel ||\r\n          event instanceof NavigationError\r\n        ) {\r\n          this.isSpinnerVisible = false;\r\n        }\r\n      },\r\n      () => {\r\n        this.isSpinnerVisible = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isSpinnerVisible = false;\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}