{"version":3,"sources":["./node_modules/@angular/material-moment-adapter/__ivy_ngcc__/fesm2015/material-moment-adapter.js","./src/app/forms/autocomplete/autocomplete.component.ts","./src/app/forms/autocomplete/autocomplete.component.html","./src/app/forms/checkbox/checkbox.component.ts","./src/app/forms/checkbox/checkbox.component.html","./src/app/forms/datepicker/datepicker.component.ts","./src/app/forms/datepicker/datepicker.component.html","./src/app/forms/editor/editor.component.ts","./src/app/forms/editor/editor.component.html","./src/app/forms/file-upload/upload.component.ts","./src/app/forms/file-upload/upload.component.html","./src/app/forms/form-layouts/form-layout.component.ts","./src/app/forms/form-layouts/form-layout.component.html","./src/app/forms/form-validation/form-validation.component.ts","./src/app/forms/form-validation/form-validation.component.html","./src/app/forms/formfield/formfield.component.ts","./src/app/forms/formfield/formfield.component.html","./src/app/forms/forms.module.ts","./src/app/forms/forms.routing.ts","./src/app/forms/input/input.component.ts","./src/app/forms/input/input.component.html","./src/app/forms/multiselect/multiselect.component.ts","./src/app/forms/multiselect/multiselect.component.html","./src/app/forms/paginator/paginator.component.ts","./src/app/forms/paginator/paginator.component.html","./src/app/forms/radiobutton/radiobutton.component.ts","./src/app/forms/radiobutton/radiobutton.component.html","./src/app/forms/select/select.component.ts","./src/app/forms/select/select.component.html","./src/app/forms/sortheader/sortheader.component.ts","./src/app/forms/sortheader/sortheader.component.html","./src/app/forms/wizard/wizard.component.ts","./src/app/forms/wizard/wizard.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuF;AACC;AAChD;AACU;;AAElD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AAC2B;AACxC,eAAe,6CAAsB,IAAI,mCAAa;AACtD;AACA,6BAA6B,wBAAwB;AACrD;AACA;AACA,wCAAwC;AACxC,WAAW,EAcV;AACD;AACA;AACA,UAAU;AACV;AACA,4CAA4C,4DAAc;AAC1D;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kEAAW;AAC3C;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gDAAgD,MAAM;AACtD;AACA;AACA,yCAAyC,KAAK;AAC9C;AACA,mBAAmB,EAAE;AACrB,2CAA2C,oBAAoB;AAC/D;AACA;AACA,yCAAyC,KAAK,0BAA0B,MAAM;AAC9E;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;A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","file":"forms-forms-module-es2015.js","sourcesContent":["import { InjectionToken, Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\nimport * as _rollupMoment from 'moment';\nimport _rollupMoment__default, {  } from 'moment';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/adapter/moment-date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nconst moment = _rollupMoment__default || _rollupMoment;\n/**\n * Configurable options for {\\@see MomentDateAdapter}.\n * @record\n */\nfunction MatMomentDateAdapterOptions() { }\nif (false) {\n    /**\n     * When enabled, the dates have to match the format exactly.\n     * See https://momentjs.com/guides/#/parsing/strict-mode/.\n     * @type {?|undefined}\n     */\n    MatMomentDateAdapterOptions.prototype.strict;\n    /**\n     * Turns the use of utc dates on or off.\n     * Changing this will change how Angular Material components like DatePicker output dates.\n     * {\\@default false}\n     * @type {?|undefined}\n     */\n    MatMomentDateAdapterOptions.prototype.useUtc;\n}\n/**\n * InjectionToken for moment date adapter to configure options.\n * @type {?}\n */\nconst MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n    return {\n        useUtc: false\n    };\n}\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts Moment.js Dates for use with Angular Material.\n */\nclass MomentDateAdapter extends DateAdapter {\n    /**\n     * @param {?} dateLocale\n     * @param {?=} _options\n     */\n    constructor(dateLocale, _options) {\n        super();\n        this._options = _options;\n        this.setLocale(dateLocale || moment.locale());\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    setLocale(locale) {\n        super.setLocale(locale);\n        /** @type {?} */\n        let momentLocaleData = moment.localeData(locale);\n        this._localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            (i) => this.createDate(2017, 0, i + 1).format('D'))),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n        };\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return this.clone(date).year();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return this.clone(date).month();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return this.clone(date).date();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return this.clone(date).day();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n        return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        return this._localeData.dates;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (style == 'long') {\n            return this._localeData.longDaysOfWeek;\n        }\n        if (style == 'short') {\n            return this._localeData.shortDaysOfWeek;\n        }\n        return this._localeData.narrowDaysOfWeek;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        return this.clone(date).format('YYYY');\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        return this._localeData.firstDayOfWeek;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.clone(date).daysInMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return date.clone().locale(this.locale);\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        const result = this._createMoment({ year, month, date }).locale(this.locale);\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return this._createMoment().locale(this.locale);\n    }\n    /**\n     * @param {?} value\n     * @param {?} parseFormat\n     * @return {?}\n     */\n    parse(value, parseFormat) {\n        if (value && typeof value == 'string') {\n            return this._createMoment(value, parseFormat, this.locale);\n        }\n        return value ? this._createMoment(value).locale(this.locale) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n        return date.format(displayFormat);\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.clone(date).add({ years });\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        return this.clone(date).add({ months });\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this.clone(date).add({ days });\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return this.clone(date).format();\n    }\n    /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        /** @type {?} */\n        let date;\n        if (value instanceof Date) {\n            date = this._createMoment(value).locale(this.locale);\n        }\n        else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n        if (date && this.isValid(date)) {\n            return this._createMoment(date).locale(this.locale);\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return moment.isMoment(obj);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return this.clone(date).isValid();\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return moment.invalid();\n    }\n    /**\n     * Creates a Moment instance while respecting the current UTC settings.\n     * @private\n     * @param {?} date\n     * @param {?=} format\n     * @param {?=} locale\n     * @return {?}\n     */\n    _createMoment(date, format, locale) {\n        const { strict, useUtc } = this._options || {};\n        return useUtc\n            ? moment.utc(date, format, locale, strict)\n            : moment(date, format, locale, strict);\n    }\n}\nMomentDateAdapter.ɵfac = function MomentDateAdapter_Factory(t) { return new (t || MomentDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(MAT_MOMENT_DATE_ADAPTER_OPTIONS, 8)); };\nMomentDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MomentDateAdapter, factory: MomentDateAdapter.ɵfac });\n/** @nocollapse */\nMomentDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MomentDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MomentDateAdapter.prototype._localeData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MomentDateAdapter.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/adapter/moment-date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAT_MOMENT_DATE_FORMATS = {\n    parse: {\n        dateInput: 'l',\n    },\n    display: {\n        dateInput: 'l',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/adapter/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MomentDateModule {\n}\nMomentDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MomentDateModule });\nMomentDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MomentDateModule_Factory(t) { return new (t || MomentDateModule)(); }, providers: [\n        {\n            provide: DateAdapter,\n            useClass: MomentDateAdapter,\n            deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n        }\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MomentDateModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    {\n                        provide: DateAdapter,\n                        useClass: MomentDateAdapter,\n                        deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                    }\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0 = MAT_MOMENT_DATE_FORMATS;\nclass MatMomentDateModule {\n}\nMatMomentDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatMomentDateModule });\nMatMomentDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatMomentDateModule_Factory(t) { return new (t || MatMomentDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }], imports: [[MomentDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMomentDateModule, { imports: [MomentDateModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMomentDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MomentDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY, MAT_MOMENT_DATE_FORMATS, MatMomentDateModule, MomentDateAdapter, MomentDateModule };\n\n//# sourceMappingURL=material-moment-adapter.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nexport class State {\r\n  constructor(\r\n    public name: string,\r\n    public population: string,\r\n    public flag: string\r\n  ) {}\r\n}\r\n\r\nexport interface StateGroup {\r\n  letter: string;\r\n  names: string[];\r\n}\r\n\r\nexport interface User {\r\n  name: string;\r\n}\r\n\r\nexport const _filter = (opt: string[], value: string): string[] => {\r\n  const filterValue = value.toLowerCase();\r\n\r\n  return opt.filter(item => item.toLowerCase().indexOf(filterValue) === 0);\r\n};\r\n\r\n@Component({\r\n  selector: 'app-autocomplete',\r\n  templateUrl: './autocomplete.component.html',\r\n  styleUrls: ['./autocomplete.component.scss']\r\n})\r\nexport class AutocompleteComponent implements OnInit {\r\n  // state autocomplate\r\n  stateCtrl: FormControl;\r\n  filteredStates: Observable<any[]>;\r\n\r\n  // 2\r\n  myControl1 = new FormControl();\r\n  options: string[] = ['One', 'Two', 'Three'];\r\n\r\n  // 3\r\n\r\n  stateForm: FormGroup = this.fb.group({\r\n    stateGroup: ''\r\n  });\r\n\r\n  stateGroups: StateGroup[] = [\r\n    {\r\n      letter: 'A',\r\n      names: ['Alabama', 'Alaska', 'Arizona', 'Arkansas']\r\n    },\r\n    {\r\n      letter: 'C',\r\n      names: ['California', 'Colorado', 'Connecticut']\r\n    },\r\n    {\r\n      letter: 'D',\r\n      names: ['Delaware']\r\n    },\r\n    {\r\n      letter: 'F',\r\n      names: ['Florida']\r\n    },\r\n    {\r\n      letter: 'G',\r\n      names: ['Georgia']\r\n    },\r\n    {\r\n      letter: 'H',\r\n      names: ['Hawaii']\r\n    },\r\n    {\r\n      letter: 'I',\r\n      names: ['Idaho', 'Illinois', 'Indiana', 'Iowa']\r\n    },\r\n    {\r\n      letter: 'K',\r\n      names: ['Kansas', 'Kentucky']\r\n    },\r\n    {\r\n      letter: 'L',\r\n      names: ['Louisiana']\r\n    },\r\n    {\r\n      letter: 'M',\r\n      names: [\r\n        'Maine',\r\n        'Maryland',\r\n        'Massachusetts',\r\n        'Michigan',\r\n        'Minnesota',\r\n        'Mississippi',\r\n        'Missouri',\r\n        'Montana'\r\n      ]\r\n    },\r\n    {\r\n      letter: 'N',\r\n      names: [\r\n        'Nebraska',\r\n        'Nevada',\r\n        'New Hampshire',\r\n        'New Jersey',\r\n        'New Mexico',\r\n        'New York',\r\n        'North Carolina',\r\n        'North Dakota'\r\n      ]\r\n    },\r\n    {\r\n      letter: 'O',\r\n      names: ['Ohio', 'Oklahoma', 'Oregon']\r\n    },\r\n    {\r\n      letter: 'P',\r\n      names: ['Pennsylvania']\r\n    },\r\n    {\r\n      letter: 'R',\r\n      names: ['Rhode Island']\r\n    },\r\n    {\r\n      letter: 'S',\r\n      names: ['South Carolina', 'South Dakota']\r\n    },\r\n    {\r\n      letter: 'T',\r\n      names: ['Tennessee', 'Texas']\r\n    },\r\n    {\r\n      letter: 'U',\r\n      names: ['Utah']\r\n    },\r\n    {\r\n      letter: 'V',\r\n      names: ['Vermont', 'Virginia']\r\n    },\r\n    {\r\n      letter: 'W',\r\n      names: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\r\n    }\r\n  ];\r\n\r\n  stateGroupOptions: Observable<StateGroup[]>;\r\n\r\n  states: State[] = [\r\n    {\r\n      name: 'Arkansas',\r\n      population: '2.978M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\r\n      flag:\r\n        'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\r\n    },\r\n    {\r\n      name: 'California',\r\n      population: '39.14M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\r\n      flag:\r\n        'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\r\n    },\r\n    {\r\n      name: 'Florida',\r\n      population: '20.27M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\r\n      flag:\r\n        'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\r\n    },\r\n    {\r\n      name: 'Texas',\r\n      population: '27.47M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\r\n      flag:\r\n        'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\r\n    }\r\n  ];\r\n\r\n  // 4\r\n\r\n  myControl = new FormControl();\r\n  options1: User[] = [{ name: 'Mary' }, { name: 'Shelley' }, { name: 'Igor' }];\r\n  filteredOptions: Observable<User[]>;\r\n\r\n  // 5\r\n\r\n  myControl2 = new FormControl();\r\n  options2: string[] = ['One', 'Two', 'Three'];\r\n  filteredOptions1: Observable<string[]>;\r\n\r\n  // 6\r\n\r\n  highControl = new FormControl();\r\n  options3: string[] = ['One', 'Two', 'Three'];\r\n  filteredOptions2: Observable<string[]>;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.stateCtrl = new FormControl();\r\n    this.filteredStates = this.stateCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(state => (state ? this.filterStates(state) : this.states.slice()))\r\n    );\r\n  }\r\n\r\n  filterStates(name: string) {\r\n    return this.states.filter(\r\n      state => state.name.toLowerCase().indexOf(name.toLowerCase()) === 0\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    // tslint:disable-next-line:no-non-null-assertion\r\n    this.stateGroupOptions = this.stateForm\r\n      .get('stateGroup')!\r\n      .valueChanges.pipe(\r\n        startWith(''),\r\n        map(value => this._filterGroup(value))\r\n      );\r\n\r\n    // 4\r\n\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith<string | User>(''),\r\n      map(value => (typeof value === 'string' ? value : value.name)),\r\n      map(name => (name ? this._filter(name) : this.options1.slice()))\r\n    );\r\n\r\n    // 5\r\n\r\n    this.filteredOptions1 = this.myControl2.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter1(value))\r\n    );\r\n\r\n    // 6\r\n    this.filteredOptions2 = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter2(value))\r\n    );\r\n  }\r\n\r\n  // 4\r\n\r\n  displayFn(user?: User): string | undefined {\r\n    return user ? user.name : undefined;\r\n  }\r\n\r\n  private _filterGroup(value: string): StateGroup[] {\r\n    if (value) {\r\n      return this.stateGroups\r\n        .map(group => ({\r\n          letter: group.letter,\r\n          names: _filter(group.names, value)\r\n        }))\r\n        .filter(group => group.names.length > 0);\r\n    }\r\n\r\n    return this.stateGroups;\r\n  }\r\n\r\n  private _filter(name: string): User[] {\r\n    const filterValue = name.toLowerCase();\r\n\r\n    return this.options1.filter(\r\n      option => option.name.toLowerCase().indexOf(filterValue) === 0\r\n    );\r\n  }\r\n\r\n  // 5\r\n\r\n  private _filter1(value: string): string[] {\r\n    const filterValue1 = value.toLowerCase();\r\n\r\n    return this.options2.filter(option1 =>\r\n      option1.toLowerCase().includes(filterValue1)\r\n    );\r\n  }\r\n\r\n  // 6\r\n\r\n  private _filter2(value: string): string[] {\r\n    const filterValue2 = value.toLowerCase();\r\n\r\n    return this.options3.filter(\r\n      option => option.toLowerCase().indexOf(filterValue2) === 0\r\n    );\r\n  }\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Autocomplete Example</mat-card-title>\r\n                <!-- ============================================================== -->\r\n                <!-- column -->\r\n                <!-- ============================================================== -->\r\n                <form class=\"example-form\">\r\n                    <mat-form-field class=\"example-full-width\">\r\n                        <input matInput placeholder=\"State\" aria-label=\"State\" [matAutocomplete]=\"auto\" [formControl]=\"stateCtrl\">\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let state of filteredStates | async\" [value]=\"state.name\">\r\n                                <img class=\"example-option-img\" aria-hidden [src]=\"state.flag\" height=\"25\">\r\n                                <span>{{state.name}}</span> |\r\n                                <small>Population: {{state.population}}</small>\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n\r\n                    <mat-slide-toggle [checked]=\"stateCtrl.disabled\" (change)=\"stateCtrl.disabled ? stateCtrl.enable() : stateCtrl.disable()\">\r\n                        Disable Input?\r\n                    </mat-slide-toggle>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<!-- ============================================================== -->\r\n<!-- Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Simple autocomplete</mat-card-title>\r\n                <!-- ============================================================== -->\r\n                <!-- column -->\r\n                <!-- ============================================================== -->\r\n                <form class=\"example-form\">\r\n                    <mat-form-field class=\"example-full-width\">\r\n                        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\r\n                            [matAutocomplete]=\"autoTest\">\r\n                        <mat-autocomplete #autoTest=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of options1\" [value]=\"option\">\r\n                                {{option}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<!-- ============================================================== -->\r\n<!-- Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Option groups</mat-card-title>\r\n                <!-- ============================================================== -->\r\n                <!-- column -->\r\n                <!-- ============================================================== -->\r\n                <form [formGroup]=\"stateForm\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput placeholder=\"States Group\" formControlName=\"stateGroup\" required\r\n                            [matAutocomplete]=\"autoGroup\">\r\n                        <mat-autocomplete #autoGroup=\"matAutocomplete\">\r\n                            <mat-optgroup *ngFor=\"let group of stateGroupOptions | async\" [label]=\"group.letter\">\r\n                                <mat-option *ngFor=\"let name of group.names\" [value]=\"name\">\r\n                                    {{name}}\r\n                                </mat-option>\r\n                            </mat-optgroup>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<!-- ============================================================== -->\r\n<!-- Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Display value autocomplete</mat-card-title>\r\n                <!-- ============================================================== -->\r\n                <!-- column -->\r\n                <!-- ============================================================== -->\r\n                <form>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" placeholder=\"Assignee\" aria-label=\"Assignee\" matInput [formControl]=\"myControl\"\r\n                            [matAutocomplete]=\"autoready\">\r\n                        <mat-autocomplete #autoready=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n                            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n                                {{option.name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<!-- ============================================================== -->\r\n<!-- Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Filter autocomplete</mat-card-title>\r\n                <!-- ============================================================== -->\r\n                <!-- column -->\r\n                <!-- ============================================================== -->\r\n                <form>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\r\n                            [matAutocomplete]=\"autostart\">\r\n                        <mat-autocomplete #autostart=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of filteredOptions1 | async\" [value]=\"option\">\r\n                                {{option}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- ============================================================== -->\r\n<!-- Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Highlight the first autocomplete option</mat-card-title>\r\n                <!-- ============================================================== -->\r\n                <!-- column -->\r\n                <!-- ============================================================== -->\r\n                <form>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\r\n                            [matAutocomplete]=\"autopast\">\r\n                        <mat-autocomplete autoActiveFirstOption #autopast=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of filteredOptions2 | async\" [value]=\"option\">\r\n                                {{option}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent {\r\n  checked = false;\r\n  indeterminate = false;\r\n  align = 'start';\r\n  disabled = false;\r\n  labelPosition = false;\r\n}\r\n","<mat-card>\r\n  <mat-card-content>\r\n    <h3 class=\"example-h2\">Checkbox configuration</h3>\r\n\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"indeterminate\">Indeterminate</mat-checkbox>\r\n    </section>\r\n\r\n    <section class=\"example-section\">\r\n      <label class=\"example-margin\">Align:</label>\r\n      <mat-radio-group [(ngModel)]=\"labelPosition\">\r\n        <mat-radio-button class=\"example-margin\" value=\"after\">After</mat-radio-button>\r\n        <mat-radio-button class=\"example-margin\" value=\"before\">Before</mat-radio-button>\r\n      </mat-radio-group>\r\n    </section>\r\n\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\r\n    </section>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card class=\"result\">\r\n  <mat-card-content>\r\n    <h2 class=\"example-h2\">Result</h2>\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\" [(indeterminate)]=\"indeterminate\" [labelPosition]=\"labelPosition\"\r\n        [disabled]=\"disabled\">\r\n        I'm a checkbox\r\n      </mat-checkbox>\r\n    </section>\r\n  </mat-card-content>\r\n</mat-card>","import { Component } from '@angular/core';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\n\r\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\r\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\n\r\nimport * as _moment from 'moment';\r\nimport { default as _rollupMoment } from 'moment';\r\nconst moment = _rollupMoment || _moment;\r\n\r\nexport const MY_FORMATS = {\r\n    parse: {\r\n        dateInput: 'LL',\r\n    },\r\n    display: {\r\n        dateInput: 'LL',\r\n        monthYearLabel: 'MMM YYYY',\r\n        dateA11yLabel: 'LL',\r\n        monthYearA11yLabel: 'MMMM YYYY',\r\n    }\r\n};\r\n\r\n@Component({\r\n    selector: 'app-datepicker',\r\n    templateUrl: './datepicker.component.html',\r\n    styleUrls: ['./datepicker.component.scss'],\r\n    providers: [\r\n        {\r\n            provide: DateAdapter,\r\n            useClass: MomentDateAdapter,\r\n            deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\r\n        },\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS }\r\n    ]\r\n})\r\nexport class DatepickerComponent {\r\n    // this is for the start date\r\n    startDate = new Date(1990, 0, 1);\r\n\r\n    minDate = new Date(2000, 0, 1);\r\n    maxDate = new Date(2020, 0, 1);\r\n\r\n    // Datepicker selected value\r\n    date = new FormControl(new Date());\r\n    serializedDate = new FormControl(new Date().toISOString());\r\n\r\n    // Datepicker input and change event\r\n\r\n    events: string[] = [];\r\n\r\n    addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\r\n        this.events.push(`${type}: ${event.value}`);\r\n    }\r\n\r\n    myFilter = (d: Date): boolean => {\r\n        const day = d.getDay();\r\n        // Prevent Saturday and Sunday from being selected.\r\n        return day !== 0 && day !== 6;\r\n        // tslint:disable-next-line:semicolon\r\n    };\r\n\r\n    constructor(private adapter: DateAdapter<any>) { }\r\n\r\n    french() {\r\n        this.adapter.setLocale('fr');\r\n    }\r\n\r\n    // custom date\r\n    customdate = new FormControl(moment());\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Fixed height Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Basic Datepicker</mat-card-title>\r\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n            </mat-card-content>\r\n\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n    <!-- Grid-->\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Datepicker start date</mat-card-title>\r\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker2\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker2 startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n            </mat-card-content>\r\n\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n    <!-- Grid-->\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Datepicker selected value</mat-card-title>\r\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker3\" placeholder=\"Angular forms\" [formControl]=\"date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker3></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker4\" placeholder=\"Angular forms (w/ deserialization)\"\r\n                        [formControl]=\"serializedDate\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker4></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker5\" placeholder=\"Value binding\" [value]=\"date.value\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker5\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker5></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n            </mat-card-content>\r\n\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n    <!-- Grid-->\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Datepicker input and change events</mat-card-title>\r\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker6\" placeholder=\"Input & change events\"\r\n                        (dateInput)=\"addEvent('input', $event)\" (dateChange)=\"addEvent('change', $event)\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker6\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker6></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n                <div class=\"b-all p-20\">\r\n                    <div *ngFor=\"let e of events\">{{e}}</div>\r\n                </div>\r\n\r\n            </mat-card-content>\r\n\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n    <!-- Grid-->\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Disabled datepicker</mat-card-title>\r\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\r\n                <p>\r\n                    <mat-form-field>\r\n                        <input matInput [matDatepicker]=\"dp1\" placeholder=\"Completely disabled\" disabled>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp1></mat-datepicker>\r\n                    </mat-form-field>\r\n                </p>\r\n\r\n                <p>\r\n                    <mat-form-field>\r\n                        <input matInput [matDatepicker]=\"dp2\" placeholder=\"Popup disabled\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp2\" disabled></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp2></mat-datepicker>\r\n                    </mat-form-field>\r\n                </p>\r\n\r\n                <p>\r\n                    <mat-form-field>\r\n                        <input matInput [matDatepicker]=\"dp3\" placeholder=\"Input disabled\" disabled>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n                </p>\r\n\r\n            </mat-card-content>\r\n\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n    <!-- Grid-->\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Datepicker touch UI</mat-card-title>\r\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <input matInput [matDatepicker]=\"picker7\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker7\"></mat-datepicker-toggle>\r\n                    <mat-datepicker touchUi=\"true\" #picker7></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n    <!-- Grid-->\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Datepicker open method</mat-card-title>\r\n                <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <input matInput [matDatepicker]=\"picker8\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker #picker8></mat-datepicker>\r\n                </mat-form-field>\r\n                <button mat-raised-button (click)=\"picker8.open()\">Open</button>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <!-- Grid-->\r\n</div>\r\n\r\n\r\n\r\n\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Changing the datepicker colors</mat-card-title>\r\n                <mat-form-field color=\"accent\">\r\n                    <mat-label>Inherited calendar color</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker111\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker111\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker111></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field color=\"accent\">\r\n                    <mat-label>Custom calendar color</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker222\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker222\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker222 color=\"success\"></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Datepicker with min & max validation</mat-card-title>\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"minpicker\"\r\n                        placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"minpicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #minpicker></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Datepicker with filter validation</mat-card-title>\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"filterpicker\"\r\n                        placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"filterpicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #filterpicker></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Datepicker input and change events</mat-card-title>\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"pickerevent\" placeholder=\"Input & change events\"\r\n                        (dateInput)=\"addEvent('input', $event)\" (dateChange)=\"addEvent('change', $event)\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"pickerevent\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #pickerevent></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n                <div class=\"example-events\">\r\n                    <div *ngFor=\"let e of events\">{{e}}</div>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Setting the locale code</mat-card-title>\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"dp\" placeholder=\"Different locale\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dp></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n                <button mat-button (click)=\"french()\">Dynamically switch to French</button>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<!-- New -->\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-card-title>Datepicker with custom formats <span class=\"label label-primary\">New</span>\r\n                </mat-card-title>\r\n                <mat-form-field class=\"m-t-15\">\r\n                    <mat-label>Verbose datepicker</mat-label>\r\n                    <input matInput [matDatepicker]=\"customdp\" [formControl]=\"customdate\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"customdp\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #customdp></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-editor',\r\n  templateUrl: './editor.component.html',\r\n  styleUrls: ['./editor.component.scss']\r\n})\r\nexport class EditorComponent {\r\n  subtitle: string;\r\n\r\n  constructor() {\r\n    this.subtitle = 'This is some text within a card block.';\r\n  }\r\n}\r\n","<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Default Editor</mat-card-title>\r\n        <mat-card-subtitle>quill editor with angular and TypeScript. ngx-quill is the new angular 2 and beyond implementation of ngQuill.\r\n            <a\r\n                href=\"https://github.com/KillerCodeMonkey/ngx-quill\" target=\"_blank\">Official website</a>\r\n        </mat-card-subtitle>\r\n        <quill-editor [style]=\"{height: '200px'}\"></quill-editor>\r\n    </mat-card-content>\r\n</mat-card>\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Bubble Editor</mat-card-title>\r\n        <quill-editor theme=\"bubble\" placeholder=\"Bubble editor\" bounds=\".mat-drawer-content\" [style]=\"{border: '1px solid #dadada'}\"></quill-editor>\r\n    </mat-card-content>\r\n</mat-card>\r\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  templateUrl: './upload.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./upload.scss']\r\n})\r\nexport class UploadComponent {\r\n  \r\n}\r\n","<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Angular2 File Upload</mat-card-title>\r\n        test\r\n    </mat-card-content>\r\n</mat-card>","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-formlayout',\r\n  templateUrl: './form-layout.component.html',\r\n  styleUrls: ['./form-layout.component.scss']\r\n})\r\nexport class FormLayoutComponent {\r\n  options: FormGroup;\r\n\r\n  constructor(fb: FormBuilder) {\r\n    this.options = fb.group({\r\n      hideRequired: false,\r\n      floatLabel: 'auto'\r\n    });\r\n  }\r\n  // For form validator\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  // Sufix and prefix\r\n  hide = true;\r\n\r\n  getErrorMessage() {\r\n    return this.email.hasError('required')\r\n      ? 'You must enter a value'\r\n      : this.email.hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-card-title>Form Basic Layouts</mat-card-title>\r\n        <!-- ============================================================== -->\r\n        <!-- column -->\r\n        <!-- ============================================================== -->\r\n        <form class=\"basic-form\">\r\n          <div fxLayout=\"row wrap\">\r\n            <!-- column -->\r\n            <div fxFlex.gt-md=\"100\" fxFlex=\"100\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"Some text value\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"EmailId\" type=\"email\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"Password\" type=\"password\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n              <mat-form-field [floatLabel]=\"options.value.floatLabel\">\r\n                <mat-label>Both a label and a placeholder</mat-label>\r\n                <input matInput placeholder=\"Simple placeholder\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n              <mat-form-field hintLabel=\"Max 10 characters\">\r\n                <input matInput #input maxlength=\"10\" placeholder=\"Enter some input\">\r\n                <mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n              <mat-form-field>\r\n                <mat-select placeholder=\"Select\">\r\n                  <mat-option value=\"option\">Option</mat-option>\r\n                  <mat-option value=\"option\">Option2</mat-option>\r\n                  <mat-option value=\"option\">Option3</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-b-20\">\r\n              <input class=\"form-control b-b\" placeholder=\"file\" type=\"file\">\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n              <mat-form-field [hideRequiredMarker]=\"options.value.hideRequired\" [floatLabel]=\"options.value.floatLabel\">\r\n                <mat-select required>\r\n                  <mat-option>-- None --</mat-option>\r\n                  <mat-option value=\"option\">Option</mat-option>\r\n                </mat-select>\r\n                <mat-placeholder>\r\n                  <mat-icon>favorite</mat-icon>\r\n                  <b> Fancy</b>\r\n                  <i> placeholder</i>\r\n                </mat-placeholder>\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-10 m-b-10\">\r\n              <mat-checkbox color=\"primary\" class=\"m-r-10\">Checkbox</mat-checkbox>\r\n              <mat-checkbox color=\"warn\" class=\"m-r-10\">Checkbox</mat-checkbox>\r\n              <mat-checkbox color=\"accent\">Checkbox</mat-checkbox>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20 m-b-20\">\r\n              <mat-radio-group>\r\n                <mat-radio-button color=\"primary\" value=\"auto\" class=\"m-r-10\">Auto</mat-radio-button>\r\n                <mat-radio-button color=\"warn\" value=\"always\" class=\"m-r-10\">Always</mat-radio-button>\r\n                <mat-radio-button color=\"accent\" value=\"never\">Never</mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n              <mat-form-field>\r\n                <textarea matInput placeholder=\"Textarea\"></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n              <button mat-raised-button color=\"primary\">Submit</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-card-title>Form field with error messages</mat-card-title>\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"Enter your email\" [formControl]=\"email\" required>\r\n          <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-card-title>Form field with prefix &amp; suffix</mat-card-title>\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\">\r\n          <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"Amount\" type=\"number\" class=\"example-right-align\">\r\n          <span matPrefix>$&nbsp;</span>\r\n          <span matSuffix>.00</span>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<!-- ============================================================== -->\r\n<!-- Card Grid-->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-card-title>Form with grid</mat-card-title>\r\n        <mat-card-subtitle>use this class\r\n          <code>.row</code> to the fxLayout=\"row\" and\r\n          <code>p-10</code> to the fxFlex div</mat-card-subtitle>\r\n        <!-- ============================================================== -->\r\n        <!-- column -->\r\n        <!-- ============================================================== -->\r\n        <form class=\"basic-form\">\r\n          <div fxLayout=\"row wrap\" fxFlexAlign=\"center\" class=\"row\">\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"25\" fxFlex=\"100\" class=\"p-10\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"grid 25\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"25\" fxFlex=\"100\" class=\"p-10\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"grid 25\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"25\" fxFlex=\"100\" class=\"p-10\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"grid 25\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"25\" fxFlex=\"100\" class=\"p-10\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"grid 25\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"33.33\" fxFlex=\"100\" class=\"p-10\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"grid 33.33\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"33.33\" fxFlex=\"100\" class=\"p-10\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"grid 33.33\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"33.33\" fxFlex=\"100\" class=\"p-10\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"grid 33.33\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"50\" fxFlex=\"100\" class=\"p-10\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"grid 50\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"50\" fxFlex=\"100\" class=\"p-10\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"grid 50\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!-- column -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"p-10\">\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"grid 100\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\nimport { CustomValidators  } from 'ngx-custom-validators';\r\n\r\nconst password = new FormControl('', Validators.required);\r\nconst confirmPassword = new FormControl('', CustomValidators.equalTo(password));\r\n\r\n@Component({\r\n  selector: 'app-form-validation',\r\n  templateUrl: './form-validation.component.html',\r\n  styleUrls: ['./form-validation.component.scss']\r\n})\r\nexport class FormValidationComponent implements OnInit {\r\n  public form: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      fname: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(5),\r\n          Validators.maxLength(10)\r\n        ])\r\n      ],\r\n      email: [\r\n        null,\r\n        Validators.compose([Validators.required, CustomValidators.email])\r\n      ],\r\n      range: [\r\n        null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          CustomValidators.range([5, 9])\r\n        ])\r\n      ],\r\n      url: [\r\n        null,\r\n        Validators.compose([Validators.required, CustomValidators.url])\r\n      ],\r\n      date: [\r\n        null,\r\n        Validators.compose([Validators.required, CustomValidators.date])\r\n      ],\r\n      phone: [\r\n        null,\r\n        Validators.compose([Validators.required])\r\n      ],\r\n      gender: [null, Validators.required],\r\n      password: password,\r\n      confirmPassword: confirmPassword\r\n    });\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-content>\r\n    <mat-card-title>Form validation</mat-card-title>\r\n    <mat-card-subtitle>Angular2 custom validation here is the\r\n      <a href=\"https://github.com/yuyang041060120/ng2-validation\" target=\"_blank\">official site</a>\r\n    </mat-card-subtitle>\r\n    <form [formGroup]=\"form\">\r\n\r\n      <div fxLayout=\"row wrap\">\r\n        <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"First name\" [formControl]=\"form.controls['fname']\">\r\n          </mat-form-field>\r\n          <mat-hint *ngIf=\"form.controls['fname'].hasError('required') && form.controls['fname'].touched\" class=\"text-danger font-14\">You must include a first name.</mat-hint>\r\n          <mat-hint *ngIf=\"form.controls['fname'].hasError('minlength') && form.controls['fname'].touched\" class=\"text-danger font-14\">Your first name must be at least 5 characters long.</mat-hint>\r\n          <mat-hint *ngIf=\"form.controls['fname'].hasError('maxlength') && form.controls['fname'].touched\" class=\"text-danger font-14\">Your first name cannot exceed 10 characters.</mat-hint>\r\n        </div>\r\n\r\n\r\n        <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Email Id\" [formControl]=\"form.controls['email']\" type=\"email\">\r\n          </mat-form-field>\r\n          <small *ngIf=\"form.controls['email'].hasError('required') && form.controls['email'].touched\" class=\"text-danger font-14\">You must include an email address.</small>\r\n          <small *ngIf=\"form.controls['email'].errors?.email && form.controls['email'].touched\" class=\"text-danger font-14\">You must include a valid email address.</small>\r\n        </div>\r\n\r\n        <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Website\" [formControl]=\"form.controls['url']\" type=\"url\">\r\n          </mat-form-field>\r\n          <small *ngIf=\"form.controls['url'].hasError('required') && form.controls['url'].touched\" class=\"text-danger font-14\">You must include a web address.</small>\r\n          <small *ngIf=\"form.controls['url'].errors?.url && form.controls['url'].touched\" class=\"text-danger font-14\">You must include a valid web address.</small>\r\n        </div>\r\n\r\n        <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\r\n          <mat-form-field>\r\n            <input matInput [matDatepicker]=\"picker\" [formControl]=\"form.controls['date']\" placeholder=\"Choose a date\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n          </mat-form-field>\r\n          <mat-hint *ngIf=\"form.controls['date'].hasError('required') && form.controls['date'].touched\" class=\"text-danger font-14\">You must include a date.</mat-hint>\r\n          <mat-hint *ngIf=\"form.controls['date'].errors?.date && form.controls['date'].touched\" class=\"text-danger font-14\">You must include a valid date.</mat-hint>\r\n        </div>\r\n\r\n        <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Number range (between 5 and 9)\" [formControl]=\"form.controls['range']\">\r\n          </mat-form-field>\r\n          <small *ngIf=\"form.controls['range'].hasError('required') && form.controls['range'].touched\" class=\"text-danger font-14\">You must enter a number.</small>\r\n          <small *ngIf=\"form.controls['range'].errors?.range && form.controls['range'].touched\" class=\"text-danger font-14\">Number should be between 5 and 9.</small>\r\n        </div>\r\n        <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Phone number\" [formControl]=\"form.controls['phone']\" type=\"text\">\r\n          </mat-form-field>\r\n          <small *ngIf=\"form.controls['phone'].hasError('required') && form.controls['phone'].touched\" class=\"text-danger font-14\">You must include phone number.</small>\r\n          <small *ngIf=\"form.controls['phone'].errors?.phone && form.controls['phone'].touched\" class=\"text-danger font-14\">You must include a valid phone number.</small>\r\n        </div>\r\n\r\n        <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Password\" [formControl]=\"form.controls['password']\" type=\"password\">\r\n          </mat-form-field>\r\n          <small *ngIf=\"form.controls['password'].hasError('required') && form.controls['password'].touched\" class=\"text-danger font-14\">You must include password.</small>\r\n        </div>\r\n\r\n        <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Confirm Password\" [formControl]=\"form.controls['confirmPassword']\" type=\"password\">\r\n          </mat-form-field>\r\n          <small *ngIf=\"form.controls['confirmPassword'].hasError('required') && form.controls['confirmPassword'].touched\" class=\"text-danger font-14\">You must include confirm password.</small>\r\n          <small *ngIf=\"form.controls['confirmPassword'].errors?.equalTo\" class=\"text-danger font-14\">Passwords do not math.</small>\r\n        </div>\r\n\r\n        <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\r\n          <label class=\"m-r-20\">Gender :</label>\r\n          <mat-radio-group [formControl]=\"form.controls['gender']\">\r\n            <mat-radio-button value=\"male\" class=\"m-r-10\">Male</mat-radio-button>\r\n            <mat-radio-button value=\"female\">Female</mat-radio-button>\r\n          </mat-radio-group>\r\n          <small *ngIf=\"!form.controls['gender'].valid && form.controls['gender'].touched\" class=\"mat-text-warn\">You must select a gender.</small>\r\n        </div>\r\n      </div>\r\n\r\n      <mat-card-actions>\r\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>","import { Component } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-formfield',\r\n  templateUrl: './formfield.component.html',\r\n  styleUrls: ['./formfield.component.scss']\r\n})\r\nexport class FormfieldComponent {\r\n  options: FormGroup;\r\n\r\n  hide = true;\r\n\r\n  constructor(fb: FormBuilder) {\r\n    this.options = fb.group({\r\n      hideRequired: false,\r\n      floatLabel: 'auto',\r\n      color: 'primary',\r\n      fontSize: [16, Validators.min(10)]\r\n    });\r\n  }\r\n\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n  getErrorMessage() {\r\n    return this.email.hasError('required')\r\n      ? 'You must enter a value'\r\n      : this.email.hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  getFontSize() {\r\n    return Math.max(10, this.options.value.fontSize);\r\n  }\r\n}\r\n","<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Simple form field</mat-card-title>\r\n\r\n        <div>\r\n            <mat-form-field>\r\n                <input matInput placeholder=\"Input\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <textarea matInput placeholder=\"Textarea\"></textarea>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-select placeholder=\"Select\">\r\n                    <mat-option value=\"option\">Option</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Simple fill form field<span class=\"label label-primary m-l-10\">New</span></mat-card-title>\r\n\r\n        <div>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Input</mat-label>\r\n                <input matInput>\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Select</mat-label>\r\n                <mat-select>\r\n                    <mat-option value=\"option\">Option</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Textarea</mat-label>\r\n                <textarea matInput></textarea>\r\n            </mat-form-field>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Form field with label</mat-card-title>\r\n\r\n        <div class=\"m-t-20\">\r\n            <form [formGroup]=\"options\">\r\n                <mat-checkbox formControlName=\"hideRequired\">Hide required marker</mat-checkbox>\r\n                <div class=\"m-t-20 m-b-30\">\r\n                    <label>Float label: </label>\r\n                    <mat-radio-group formControlName=\"floatLabel\">\r\n                        <mat-radio-button value=\"auto\" class=\"m-r-15\">Auto</mat-radio-button>\r\n                        <mat-radio-button value=\"always\" class=\"m-r-15\">Always</mat-radio-button>\r\n                        <mat-radio-button value=\"never\">Never</mat-radio-button>\r\n                    </mat-radio-group>\r\n                </div>\r\n            </form>\r\n\r\n            <mat-form-field appearance=\"fill\" [hideRequiredMarker]=\"options.value.hideRequired\"\r\n                [floatLabel]=\"options.value.floatLabel\">\r\n                <input matInput placeholder=\"Simple placeholder\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\" [floatLabel]=\"options.value.floatLabel\">\r\n                <mat-label>Both a label and a placeholder</mat-label>\r\n                <input matInput placeholder=\"Simple placeholder\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\" [hideRequiredMarker]=\"options.value.hideRequired\"\r\n                [floatLabel]=\"options.value.floatLabel\">\r\n                <mat-select required>\r\n                    <mat-option>-- None --</mat-option>\r\n                    <mat-option value=\"option\">Option</mat-option>\r\n                </mat-select>\r\n                <mat-label>\r\n                    <mat-icon>favorite</mat-icon> <b> Fancy</b> <i> label</i>\r\n                </mat-label>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n\r\n\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Form field appearance variants <span class=\"label label-primary m-l-10\">New</span>\r\n        </mat-card-title>\r\n\r\n        <div>\r\n            <mat-form-field appearance=\"legacy\" class=\"m-b-15\">\r\n                <mat-label>Legacy form field</mat-label>\r\n                <input matInput placeholder=\"Placeholder\">\r\n                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" class=\"m-b-15\">\r\n                <mat-label>Standard form field</mat-label>\r\n                <input matInput placeholder=\"Placeholder\">\r\n                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\" class=\"m-b-15\">\r\n                <mat-label>Fill form field</mat-label>\r\n                <input matInput placeholder=\"Placeholder\">\r\n                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"m-b-15\">\r\n                <mat-label>Outline form field</mat-label>\r\n                <input matInput placeholder=\"Placeholder\">\r\n                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n                <mat-hint>Hint</mat-hint>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Form field with hints</mat-card-title>\r\n\r\n        <div>\r\n            <mat-form-field hintLabel=\"Max 10 characters\">\r\n                <input matInput #input maxlength=\"10\" placeholder=\"Enter some input\">\r\n                <mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-select placeholder=\"Select me\">\r\n                    <mat-option value=\"option\">Option</mat-option>\r\n                </mat-select>\r\n                <mat-hint align=\"end\">Here's the dropdown arrow ^</mat-hint>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Form field with error messages</mat-card-title>\r\n\r\n        <div>\r\n            <mat-form-field>\r\n                <input matInput placeholder=\"Enter your email\" [formControl]=\"email\" required>\r\n                <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Form field with prefix & suffix</mat-card-title>\r\n\r\n        <div>\r\n            <mat-form-field>\r\n                <input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\">\r\n                <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <input matInput placeholder=\"Amount\" type=\"number\" class=\"example-right-align\">\r\n                <span matPrefix>$&nbsp;</span>\r\n                <span matSuffix>.00</span>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Form field theming</mat-card-title>\r\n\r\n        <form class=\"m-t-20\" [formGroup]=\"options\" [style.fontSize.px]=\"getFontSize()\">\r\n            <mat-form-field [color]=\"options.value.color\">\r\n                <mat-select placeholder=\"Color\" formControlName=\"color\">\r\n                    <mat-option value=\"primary\">Primary</mat-option>\r\n                    <mat-option value=\"accent\">Accent</mat-option>\r\n                    <mat-option value=\"warn\">Warn</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field [color]=\"options.value.color\">\r\n                <input matInput type=\"number\" placeholder=\"Font size (px)\" formControlName=\"fontSize\" min=\"10\">\r\n                <mat-error *ngIf=\"options.get('fontSize')?.invalid\">Min size: 10px</mat-error>\r\n            </mat-form-field>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>","import 'hammerjs';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DemoMaterialModule } from '../demo-material-module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormRoutes } from './forms.routing';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\n\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\n\r\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { RadiobuttonComponent } from './radiobutton/radiobutton.component';\r\nimport { FormfieldComponent } from './formfield/formfield.component';\r\nimport { InputfieldComponent } from './input/input.component';\r\nimport { DatepickerComponent } from './datepicker/datepicker.component';\r\nimport { FormLayoutComponent } from './form-layouts/form-layout.component';\r\nimport { PaginatiorComponent } from './paginator/paginator.component';\r\nimport { SortheaderComponent } from './sortheader/sortheader.component';\r\nimport { SelectfieldComponent } from './select/select.component';\r\nimport { EditorComponent } from './editor/editor.component';\r\nimport { FormValidationComponent } from './form-validation/form-validation.component';\r\nimport { UploadComponent } from './file-upload/upload.component';\r\nimport { WizardComponent } from './wizard/wizard.component';\r\nimport { MultiselectComponent } from './multiselect/multiselect.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(FormRoutes),\r\n        DemoMaterialModule,\r\n        FlexLayoutModule,\r\n        FormsModule,\r\n        QuillModule.forRoot(),\r\n        ReactiveFormsModule,\r\n        MatDatepickerModule,\r\n        NgMultiSelectDropDownModule.forRoot()\r\n    ],\r\n    declarations: [\r\n        AutocompleteComponent,\r\n        CheckboxComponent,\r\n        RadiobuttonComponent,\r\n        FormfieldComponent,\r\n        DatepickerComponent,\r\n        FormLayoutComponent,\r\n        InputfieldComponent,\r\n        SortheaderComponent,\r\n        SelectfieldComponent,\r\n        EditorComponent,\r\n        PaginatiorComponent,\r\n        FormValidationComponent,\r\n        UploadComponent,\r\n        WizardComponent,\r\n        MultiselectComponent\r\n    ]\r\n})\r\nexport class FormModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { RadiobuttonComponent } from './radiobutton/radiobutton.component';\r\nimport { FormfieldComponent } from './formfield/formfield.component';\r\nimport { DatepickerComponent } from './datepicker/datepicker.component';\r\nimport { FormLayoutComponent } from './form-layouts/form-layout.component';\r\nimport { PaginatiorComponent } from './paginator/paginator.component';\r\nimport { SortheaderComponent } from './sortheader/sortheader.component';\r\nimport { SelectfieldComponent } from './select/select.component';\r\nimport { InputfieldComponent } from './input/input.component';\r\nimport { EditorComponent } from './editor/editor.component';\r\nimport { FormValidationComponent } from './form-validation/form-validation.component';\r\nimport { WizardComponent } from './wizard/wizard.component';\r\nimport { MultiselectComponent } from './multiselect/multiselect.component';\r\n\r\nexport const FormRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: 'autocomplete',\r\n                component: AutocompleteComponent,\r\n                data: {\r\n                    title: 'Autocomplete',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Autocomplete' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'checkbox',\r\n                component: CheckboxComponent,\r\n                data: {\r\n                    title: 'Checkbox',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Checkbox' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'radiobutton',\r\n                component: RadiobuttonComponent,\r\n                data: {\r\n                    title: 'Radio Buttons',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Radio Buttons' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'datepicker',\r\n                component: DatepickerComponent,\r\n                data: {\r\n                    title: 'Datepicker',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Datepicker' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'formfield',\r\n                component: FormfieldComponent,\r\n                data: {\r\n                    title: 'Form Filed',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Form Filed' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'input',\r\n                component: InputfieldComponent,\r\n                data: {\r\n                    title: 'Input Field',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Input Field' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'select',\r\n                component: SelectfieldComponent,\r\n                data: {\r\n                    title: 'Select',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Select' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'paginator',\r\n                component: PaginatiorComponent,\r\n                data: {\r\n                    title: 'Paginator',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Paginator' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'form-layout',\r\n                component: FormLayoutComponent,\r\n                data: {\r\n                    title: 'Form Layout',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Form Layout' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'editor',\r\n                component: EditorComponent,\r\n                data: {\r\n                    title: 'Form Editor',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Form Editor' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'form-validation',\r\n                component: FormValidationComponent,\r\n                data: {\r\n                    title: 'Form Validation',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Form Validation' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'sortheader',\r\n                component: SortheaderComponent,\r\n                data: {\r\n                    title: 'Sort Header',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Sort Header' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'wizard',\r\n                component: WizardComponent,\r\n                data: {\r\n                    title: 'Form Wizard',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Form Wizard' }\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                path: 'multiselect',\r\n                component: MultiselectComponent,\r\n                data: {\r\n                    title: 'Multiselect',\r\n                    urls: [\r\n                        { title: 'Dashboard', url: '/dashboard' },\r\n                        { title: 'Multiselect' }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n];\r\n","import { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\nimport { Component, OnInit, NgZone, ViewChild } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroupDirective,\r\n  NgForm,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { take } from 'rxjs/operators';\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(\r\n      control &&\r\n      control.invalid &&\r\n      (control.dirty || control.touched || isSubmitted)\r\n    );\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.scss']\r\n})\r\nexport class InputfieldComponent {\r\n  value = 'Clear me';\r\n\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email\r\n  ]);\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(private ngZone: NgZone) {}\r\n\r\n  @ViewChild('autosize', {static:true})\r\n  autosize: CdkTextareaAutosize;\r\n\r\n  triggerResize() {\r\n    // Wait for changes to be applied, then trigger textarea resize.\r\n    this.ngZone.onStable\r\n      .pipe(take(1))\r\n      .subscribe(() => this.autosize.resizeToFitContent(true));\r\n  }\r\n}\r\n","<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Basic Inputs</mat-card-title>\r\n\r\n        <form class=\"m-t-20\">\r\n            <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"Favorite food\" value=\"Sushi\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n                <textarea matInput placeholder=\"Leave a comment\"></textarea>\r\n            </mat-form-field>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Input with a custom ErrorStateMatcher</mat-card-title>\r\n\r\n        <form>\r\n            <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\r\n                <mat-hint>Errors appear instantly!</mat-hint>\r\n                <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n                    Please enter a valid email address\r\n                </mat-error>\r\n                <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n                    Email is <strong>required</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </form>\r\n\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Auto-resizing textarea</mat-card-title>\r\n\r\n        <mat-form-field class=\"m-t-20\">\r\n            <mat-label>Font size</mat-label>\r\n            <mat-select #fontSize value=\"16px\" (selectionChange)=\"triggerResize()\">\r\n                <mat-option value=\"10px\">10px</mat-option>\r\n                <mat-option value=\"12px\">12px</mat-option>\r\n                <mat-option value=\"14px\">14px</mat-option>\r\n                <mat-option value=\"16px\">16px</mat-option>\r\n                <mat-option value=\"18px\">18px</mat-option>\r\n                <mat-option value=\"20px\">20px</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field [style.fontSize]=\"fontSize.value\">\r\n            <mat-label>Autosize textarea</mat-label>\r\n            <textarea matInput cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"2\"\r\n                cdkAutosizeMaxRows=\"5\"></textarea>\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Input with a clear button</mat-card-title>\r\n\r\n        <mat-form-field class=\"example-form-field m-t-20\">\r\n            <input matInput type=\"text\" placeholder=\"Clearable input\" [(ngModel)]=\"value\">\r\n            <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Input with error messages</mat-card-title>\r\n\r\n        <form>\r\n            <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\">\r\n                <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n                    Please enter a valid email address\r\n                </mat-error>\r\n                <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n                    Email is <strong>required</strong>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Inputs in a form</mat-card-title>\r\n\r\n        <form class=\"m-t-20\">\r\n            <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\">\r\n            </mat-form-field>\r\n\r\n            <table class=\"example-full-width\" cellspacing=\"0\">\r\n                <tr>\r\n                    <td>\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <input matInput placeholder=\"First name\">\r\n                        </mat-form-field>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <input matInput placeholder=\"Long Last Name That Will Be Truncated\">\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n\r\n            <p>\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <textarea matInput placeholder=\"Address\">1600 Amphitheatre Pkwy</textarea>\r\n                </mat-form-field>\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <textarea matInput placeholder=\"Address 2\"></textarea>\r\n                </mat-form-field>\r\n            </p>\r\n\r\n            <mat-form-field class=\"\">\r\n                <input matInput placeholder=\"City\">\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n                <input matInput placeholder=\"State\">\r\n            </mat-form-field>\r\n            <mat-form-field class=\"\">\r\n                <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" value=\"94043\">\r\n                <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\r\n            </mat-form-field>\r\n\r\n        </form>\r\n\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Input with hints</mat-card-title>\r\n\r\n        <form>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n                <input matInput #message maxlength=\"256\" placeholder=\"Message\">\r\n                <mat-hint align=\"start\"><strong>Don't disclose personal info</strong> </mat-hint>\r\n                <mat-hint align=\"end\">{{message.value.length}} / 256</mat-hint>\r\n            </mat-form-field>\r\n\r\n        </form>\r\n\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <mat-card-title>Inputs with prefixes and suffixes <span class=\"label label-primary m-l-10\">New</span>\r\n        </mat-card-title>\r\n\r\n        <form>\r\n\r\n            <mat-form-field>\r\n                <mat-label>Telephone</mat-label>\r\n                <span matPrefix>+1 &nbsp;</span>\r\n                <input type=\"tel\" matInput placeholder=\"555-555-1234\">\r\n                <mat-icon matSuffix>mode_edit</mat-icon>\r\n            </mat-form-field>\r\n\r\n        </form>\r\n\r\n    </mat-card-content>\r\n</mat-card>","import { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-multiselect',\r\n  templateUrl: './multiselect.component.html',\r\n  styleUrls: ['./multiselect.component.css']\r\n})\r\nexport class MultiselectComponent implements OnInit {\r\n\tdropdownList = [];\r\n  cities = [];\r\n  selectedItems = [];\r\n  singleselectedItems = [];\r\n  dropdownSettings = {};\r\n  singledropdownSettings = {};\r\n  closeDropdownSelection=false;\r\n  ngOnInit() {\r\n    this.dropdownList = [\r\n      { item_id: 1, item_text: 'Mumbai' },\r\n      { item_id: 2, item_text: 'Bangaluru' },\r\n      { item_id: 3, item_text: 'Pune' },\r\n      { item_id: 4, item_text: 'Navsari' },\r\n      { item_id: 5, item_text: 'New Delhi' } \r\n    ];\r\n    this.cities = ['Mumbai', 'New Delhi', 'Bangaluru', 'Pune', 'Navsari'];\r\n    this.selectedItems = [\r\n      { item_id: 3, item_text: 'Pune' },\r\n      { item_id: 4, item_text: 'Navsari' }\r\n    ];\r\n    this.singleselectedItems = ['Pune'];\r\n      this.singledropdownSettings = { \r\n          singleSelection: true,\r\n          selectAllText: 'Select All',\r\n          unSelectAllText: 'UnSelect All',\r\n          allowSearchFilter: true,\r\n          closeDropDownOnSelection: this.closeDropdownSelection\r\n      };\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 3,\r\n      allowSearchFilter: true\r\n    };\r\n  }\r\n  onItemSelect(item: any) {\r\n    console.log(item);\r\n  }\r\n  onSelectAll(items: any) {\r\n    console.log(items);\r\n  }\r\n}","<mat-card>\r\n  <mat-card-content>\r\n    <mat-card-title>Multiple Select</mat-card-title>\r\n    <ng-multiselect-dropdown\r\n      [placeholder]=\"'custom placeholder'\"\r\n      [data]=\"dropdownList\"\r\n      [(ngModel)]=\"selectedItems\"\r\n      [settings]=\"dropdownSettings\"\r\n      (onSelect)=\"onItemSelect($event)\"\r\n      (onSelectAll)=\"onSelectAll($event)\"\r\n    >\r\n    </ng-multiselect-dropdown>\r\n    <div class=\"m-t-40\">\r\n      <mat-card-title>Single Select</mat-card-title>\r\n      <ng-multiselect-dropdown\r\n         name=\"city\"\r\n         [data]=\"cities\"\r\n         [(ngModel)]=\"singleselectedItems\"\r\n         [settings]=\"singledropdownSettings\"\r\n         (onSelect)=\"onItemSelect($event)\">\r\n      </ng-multiselect-dropdown>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Component({\r\n    selector: 'app-paginator',\r\n    templateUrl: './paginator.component.html',\r\n    styleUrls: ['./paginator.component.scss']\r\n})\r\nexport class PaginatiorComponent {\r\n    // MatPaginator Inputs\r\n    length = 100;\r\n    pageSize = 10;\r\n    pageSizeOptions: number[] = [5, 10, 25, 100];\r\n\r\n    // MatPaginator Output\r\n    pageEvent: PageEvent;\r\n\r\n    setPageSizeOptions(setPageSizeOptionsInput: string) {\r\n        this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\r\n    }\r\n}\r\n","<mat-card>\r\n  <mat-card-content>\r\n    <mat-card-title>Paginator</mat-card-title>\r\n\r\n    <mat-paginator [length]=\"100\"\r\n\t              [pageSize]=\"10\"\r\n\t              [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n\t</mat-paginator>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <mat-card-title>Paginator</mat-card-title>\r\n\r\n    <mat-form-field>\r\n\t  List length:\r\n\t  <input matInput [(ngModel)]=\"length\">\r\n\t</mat-form-field>\r\n\r\n\t<mat-form-field>\r\n\t  Page size:\r\n\t  <input matInput [(ngModel)]=\"pageSize\">\r\n\t</mat-form-field>\r\n\t<mat-form-field>\r\n\t  Page size options:\r\n\t  <input matInput\r\n\t         [ngModel]=\"pageSizeOptions\"\r\n\t         (ngModelChange)=\"setPageSizeOptions($event)\">\r\n\t</mat-form-field>\r\n\r\n\t<mat-paginator [length]=\"length\"\r\n\t              [pageSize]=\"pageSize\"\r\n\t              [pageSizeOptions]=\"pageSizeOptions\"\r\n\t              (page)=\"pageEvent = $event\">\r\n\t</mat-paginator>\r\n\r\n\t<div *ngIf=\"pageEvent\">\r\n\t  <h5>Page Change Event Properties</h5>\r\n\t  <div>List length: {{pageEvent.length}}</div>\r\n\t  <div>Page size: {{pageEvent.pageSize}}</div>\r\n\t  <div>Page index: {{pageEvent.pageIndex}}</div>\r\n\t</div>\r\n\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-radiobutton',\r\n  templateUrl: './radiobutton.component.html',\r\n  styleUrls: ['./radiobutton.component.scss']\r\n})\r\nexport class RadiobuttonComponent {\r\n  favoriteSeason: string;\r\n  seasons: string[] = ['Winter', 'Spring', 'Summer', 'Autumn'];\r\n}\r\n","<mat-card>\r\n  <mat-card-content>\r\n    <h3 class=\"example-h2\">Radio Button configuration</h3>\r\n\r\n    <mat-radio-group class=\"example-radio-group\" [(ngModel)]=\"favoriteSeason\">\r\n      <mat-radio-button class=\"example-radio-button\" *ngFor=\"let season of seasons\" [value]=\"season\">\r\n        {{season}}\r\n      </mat-radio-button>\r\n    </mat-radio-group>\r\n    <div class=\"example-selected-value\">Your favorite season is: {{favoriteSeason}}</div>\r\n\r\n  </mat-card-content>\r\n</mat-card>","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroupDirective,\r\n  NgForm,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(\r\n      control &&\r\n      control.invalid &&\r\n      (control.dirty || control.touched || isSubmitted)\r\n    );\r\n  }\r\n}\r\n\r\nexport interface Food {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\nexport interface Car {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\nexport interface Animal {\r\n  name: string;\r\n  sound: string;\r\n}\r\n\r\nexport interface Pokemon {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\nexport interface PokemonGroup {\r\n  disabled?: boolean;\r\n  name: string;\r\n  pokemon: Pokemon[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  templateUrl: './select.component.html',\r\n  styleUrls: ['./select.component.scss'],\r\n  // Encapsulation has to be disabled in order for the\r\n  // component style to apply to the select panel.\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SelectfieldComponent {\r\n  // 1 && 2\r\n  foods: Food[] = [\r\n    { value: 'steak-0', viewValue: 'Steak' },\r\n    { value: 'pizza-1', viewValue: 'Pizza' },\r\n    { value: 'tacos-2', viewValue: 'Tacos' }\r\n  ];\r\n  // 3\r\n  selected1 = 'option2';\r\n\r\n  // 4\r\n  selectedValue: string;\r\n  selectedCar: string;\r\n\r\n  foods1: Food[] = [\r\n    { value: 'steak-0', viewValue: 'Steak' },\r\n    { value: 'pizza-1', viewValue: 'Pizza' },\r\n    { value: 'tacos-2', viewValue: 'Tacos' }\r\n  ];\r\n\r\n  cars: Car[] = [\r\n    { value: 'volvo', viewValue: 'Volvo' },\r\n    { value: 'saab', viewValue: 'Saab' },\r\n    { value: 'mercedes', viewValue: 'Mercedes' }\r\n  ];\r\n\r\n  // 5\r\n  animalControl = new FormControl('', [Validators.required]);\r\n  selectFormControl1 = new FormControl('', Validators.required);\r\n  animals: Animal[] = [\r\n    { name: 'Dog', sound: 'Woof!' },\r\n    { name: 'Cat', sound: 'Meow!' },\r\n    { name: 'Cow', sound: 'Moo!' },\r\n    { name: 'Fox', sound: 'Wa-pa-pa-pa-pa-pa-pow!' }\r\n  ];\r\n\r\n  // 6\r\n  disableSelect = new FormControl(false);\r\n\r\n  // 7\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Carolina',\r\n    'North Dakota',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n\r\n  // 8\r\n  pokemonControl = new FormControl();\r\n  pokemonGroups: PokemonGroup[] = [\r\n    {\r\n      name: 'Grass',\r\n      pokemon: [\r\n        { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\r\n        { value: 'oddish-1', viewValue: 'Oddish' },\r\n        { value: 'bellsprout-2', viewValue: 'Bellsprout' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Water',\r\n      pokemon: [\r\n        { value: 'squirtle-3', viewValue: 'Squirtle' },\r\n        { value: 'psyduck-4', viewValue: 'Psyduck' },\r\n        { value: 'horsea-5', viewValue: 'Horsea' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Fire',\r\n      disabled: true,\r\n      pokemon: [\r\n        { value: 'charmander-6', viewValue: 'Charmander' },\r\n        { value: 'vulpix-7', viewValue: 'Vulpix' },\r\n        { value: 'flareon-8', viewValue: 'Flareon' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Psychic',\r\n      pokemon: [\r\n        { value: 'mew-9', viewValue: 'Mew' },\r\n        { value: 'mewtwo-10', viewValue: 'Mewtwo' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  // 9\r\n  toppings = new FormControl();\r\n  toppingList: string[] = [\r\n    'Extra cheese',\r\n    'Mushroom',\r\n    'Onion',\r\n    'Pepperoni',\r\n    'Sausage',\r\n    'Tomato'\r\n  ];\r\n\r\n  // 10\r\n  panelColor = new FormControl('red');\r\n\r\n  // 11\r\n  selected = new FormControl('valid', [\r\n    Validators.required,\r\n    Validators.pattern('valid')\r\n  ]);\r\n\r\n  selectFormControl = new FormControl('valid', [\r\n    Validators.required,\r\n    Validators.pattern('valid')\r\n  ]);\r\n\r\n  nativeSelectFormControl = new FormControl('valid', [\r\n    Validators.required,\r\n    Validators.pattern('valid')\r\n  ]);\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n}\r\n","<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title class=\"mb-3\">Basic Material select</mat-card-title>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-select placeholder=\"Favorite food\">\r\n\t\t\t\t<mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n\t\t\t\t\t{{food.viewValue}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t</mat-form-field>\r\n\t</mat-card-content>\r\n</mat-card>\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title class=\"mb-3\">Basic Native select</mat-card-title>\r\n\t\t<mat-form-field>\r\n\t\t\t<select matNativeControl required>\r\n\t\t\t\t<option value=\"volvo\">Volvo</option>\r\n\t\t\t\t<option value=\"saab\">Saab</option>\r\n\t\t\t\t<option value=\"mercedes\">Mercedes</option>\r\n\t\t\t\t<option value=\"audi\">Audi</option>\r\n\t\t\t</select>\r\n\t\t</mat-form-field>\r\n\t</mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title class=\"mb-3\">Select with 2-way value binding</mat-card-title>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-select [(value)]=\"selected1\">\r\n\t\t\t\t<mat-option>None</mat-option>\r\n\t\t\t\t<mat-option value=\"option1\">Option 1</mat-option>\r\n\t\t\t\t<mat-option value=\"option2\">Option 2</mat-option>\r\n\t\t\t\t<mat-option value=\"option3\">Option 3</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t</mat-form-field>\r\n\r\n\t\t<p>You selected: {{selected1}}</p>\r\n\t</mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title>Select in a Form </mat-card-title>\r\n\t\t<form>\r\n\t\t\t<h5 class=\"m-b-10\">Material Select</h5>\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-select placeholder=\"Favorite food\" [(ngModel)]=\"selectedValue\" name=\"food\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let food of foods1\" [value]=\"food.value\">\r\n\t\t\t\t\t\t{{food.viewValue}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<p> Selected food: {{selectedValue}} </p>\r\n\r\n\t\t\t<h5 class=\"m-b-10\">Native html Select</h5>\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<select matNativeControl placeholder=\"Favorite car\" [(ngModel)]=\"selectedCar\" name=\"car\">\r\n\t\t\t\t\t<option value=\"\" disabled selected></option>\r\n\t\t\t\t\t<option *ngFor=\"let car of cars\" [value]=\"car.value\">\r\n\t\t\t\t\t\t{{car.viewValue}}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t</select>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<p> Selected car: {{selectedCar}} </p>\r\n\t\t</form>\r\n\t</mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title>Select with form field features</mat-card-title>\r\n\t\t<form>\r\n\t\t\t<h5 class=\"m-b-10\">Material Select</h5>\r\n\t\t\t<mat-form-field class=\"m-b-20\">\r\n\t\t\t\t<mat-select placeholder=\"Favorite animal\" [formControl]=\"animalControl\" required>\r\n\t\t\t\t\t<mat-option>--</mat-option>\r\n\t\t\t\t\t<mat-option *ngFor=\"let animal of animals\" [value]=\"animal\">\r\n\t\t\t\t\t\t{{animal.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t\t<mat-error *ngIf=\"animalControl.hasError('required')\">Please choose an animal</mat-error>\r\n\t\t\t\t<mat-hint>{{animalControl.value?.sound}}</mat-hint>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<h5 class=\"m-b-10\">Native html Select</h5>\r\n\t\t\t<mat-form-field class=\"m-t-15\">\r\n\t\t\t\t<mat-label>Select your car (required)</mat-label>\r\n\t\t\t\t<select matNativeControl required [formControl]=\"selectFormControl1\">\r\n\t\t\t\t\t<option label=\"--select something --\"></option>\r\n\t\t\t\t\t<option value=\"saab\">Saab</option>\r\n\t\t\t\t\t<option value=\"mercedes\">Mercedes</option>\r\n\t\t\t\t\t<option value=\"audi\">Audi</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t<mat-error *ngIf=\"selectFormControl1.hasError('required')\">\r\n\t\t\t\t\tThis field is required\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-hint>You can pick up your favorite car here</mat-hint>\r\n\t\t\t</mat-form-field>\r\n\t\t</form>\r\n\t</mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title>Disabled select</mat-card-title>\r\n\t\t<p>\r\n\t\t\t<mat-checkbox [formControl]=\"disableSelect\">Disable select</mat-checkbox>\r\n\t\t</p>\r\n\t\t<h5 class=\"m-b-10\">Material Select</h5>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-select placeholder=\"Choose an option\" [disabled]=\"disableSelect.value\">\r\n\t\t\t\t<mat-option value=\"option1\">Option 1</mat-option>\r\n\t\t\t\t<mat-option value=\"option2\" disabled>Option 2 (disabled)</mat-option>\r\n\t\t\t\t<mat-option value=\"option3\">Option 3</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t</mat-form-field>\r\n\t\t<h5 class=\"m-b-10\">Native html select</h5>\r\n\t\t<mat-form-field>\r\n\t\t\t<select matNativeControl placeholder=\"Choose an option\" [disabled]=\"disableSelect.value\">\r\n\t\t\t\t<option value=\"\" disabled selected></option>\r\n\t\t\t\t<option value=\"volvo\">Volvo</option>\r\n\t\t\t\t<option value=\"saab\" disabled>Saab</option>\r\n\t\t\t\t<option value=\"mercedes\">Mercedes</option>\r\n\t\t\t\t<option value=\"audi\">Audi</option>\r\n\t\t\t</select>\r\n\t\t</mat-form-field>\r\n\r\n\t</mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title>Select with reset option</mat-card-title>\r\n\t\t<h5 class=\"m-b-10\">Material Select</h5>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-select placeholder=\"State\">\r\n\t\t\t\t<mat-option>None</mat-option>\r\n\t\t\t\t<mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state}}</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t</mat-form-field>\r\n\t\t<h5 class=\"m-b-10\">Native html select</h5>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>Select your car</mat-label>\r\n\t\t\t<select matNativeControl id=\"mySelectId\">\r\n\t\t\t\t<option value=\"\" disabled selected></option>\r\n\t\t\t\t<option value=\"volvo\">Volvo</option>\r\n\t\t\t\t<option value=\"saab\">Saab</option>\r\n\t\t\t\t<option value=\"mercedes\">Mercedes</option>\r\n\t\t\t\t<option value=\"audi\">Audi</option>\r\n\t\t\t</select>\r\n\t\t</mat-form-field>\r\n\r\n\t</mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title>Select with option groups </mat-card-title>\r\n\t\t<h5 class=\"m-b-10\">Material Select</h5>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-select placeholder=\"Pokemon\" [formControl]=\"pokemonControl\">\r\n\t\t\t\t<mat-option>-- None --</mat-option>\r\n\t\t\t\t<mat-optgroup *ngFor=\"let group of pokemonGroups\" [label]=\"group.name\" [disabled]=\"group.disabled\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let pokemon of group.pokemon\" [value]=\"pokemon.value\">\r\n\t\t\t\t\t\t{{pokemon.viewValue}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-optgroup>\r\n\t\t\t</mat-select>\r\n\t\t</mat-form-field>\r\n\t\t<h5 class=\"m-b-10\">Native html select</h5>\r\n\t\t<mat-form-field>\r\n\t\t\t<select matNativeControl>\r\n\t\t\t\t<optgroup label=\"Swedish Cars\">\r\n\t\t\t\t\t<option value=\"volvo\">volvo</option>\r\n\t\t\t\t\t<option value=\"saab\">Saab</option>\r\n\t\t\t\t</optgroup>\r\n\t\t\t\t<optgroup label=\"German Cars\">\r\n\t\t\t\t\t<option value=\"mercedes\">Mercedes</option>\r\n\t\t\t\t\t<option value=\"audi\">Audi</option>\r\n\t\t\t\t</optgroup>\r\n\t\t\t</select>\r\n\t\t</mat-form-field>\r\n\r\n\t</mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title>Select with multiple selection</mat-card-title>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-select placeholder=\"Toppings\" [formControl]=\"toppings\" multiple>\r\n\t\t\t\t<mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t</mat-form-field>\r\n\t</mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title>Select with custom trigger text</mat-card-title>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-select placeholder=\"Toppings\" [formControl]=\"toppings\" multiple>\r\n\t\t\t\t<mat-select-trigger>\r\n\t\t\t\t\t{{toppings.value ? toppings.value[0] : ''}}\r\n\t\t\t\t\t<span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\r\n\t\t\t\t\t\t(+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</mat-select-trigger>\r\n\t\t\t\t<mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t</mat-form-field>\r\n\t</mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title>Select with no option ripple</mat-card-title>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-select placeholder=\"Select an option\" disableRipple>\r\n\t\t\t\t<mat-option value=\"1\">Option 1</mat-option>\r\n\t\t\t\t<mat-option value=\"2\">Option 2</mat-option>\r\n\t\t\t\t<mat-option value=\"3\">Option 3</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t</mat-form-field>\r\n\t</mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title>Select with custom panel styling</mat-card-title>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-select placeholder=\"Panel color\" [formControl]=\"panelColor\" panelClass=\"example-panel-{{panelColor.value}}\">\r\n\t\t\t\t<mat-option value=\"red\">Red</mat-option>\r\n\t\t\t\t<mat-option value=\"green\">Green</mat-option>\r\n\t\t\t\t<mat-option value=\"blue\">Blue</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t</mat-form-field>\r\n\t</mat-card-content>\r\n</mat-card>\r\n\r\n<mat-card>\r\n\t<mat-card-content>\r\n\t\t<mat-card-title>Select with a custom ErrorStateMatcher </mat-card-title>\r\n\t\t<h5 class=\"m-b-10\">Material Select</h5>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-select placeholder=\"Choose one\" [formControl]=\"selected\" [errorStateMatcher]=\"matcher\">\r\n\t\t\t\t<mat-option>Clear</mat-option>\r\n\t\t\t\t<mat-option value=\"valid\">Valid option</mat-option>\r\n\t\t\t\t<mat-option value=\"invalid\">Invalid option</mat-option>\r\n\t\t\t</mat-select>\r\n\t\t\t<mat-hint>Errors appear instantly!</mat-hint>\r\n\t\t\t<mat-error *ngIf=\"selected.hasError('required')\">You must make a selection</mat-error>\r\n\t\t\t<mat-error *ngIf=\"selected.hasError('pattern') && !selected.hasError('required')\">\r\n\t\t\t\tYour selection is invalid\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\t\t<h5 class=\"m-b-10\">Native html select</h5>\r\n\t\t<mat-form-field>\r\n\t\t\t<select matNativeControl placeholder=\"Choose one\" [formControl]=\"nativeSelectFormControl\" [errorStateMatcher]=\"matcher\">\r\n\t\t\t\t<option value=\"\"></option>\r\n\t\t\t\t<option value=\"valid\" selected>Valid option</option>\r\n\t\t\t\t<option value=\"invalid\">Invalid option</option>\r\n\t\t\t</select>\r\n\t\t\t<mat-error *ngIf=\"nativeSelectFormControl.hasError('required')\">You must make a selection</mat-error>\r\n\t\t\t<mat-error *ngIf=\"nativeSelectFormControl.hasError('pattern') && !nativeSelectFormControl.hasError('required')\">\r\n\t\t\t\tYour selection is invalid\r\n\t\t\t</mat-error>\r\n\t\t</mat-form-field>\r\n\r\n\t</mat-card-content>\r\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Sort } from '@angular/material/sort';\r\n\r\nexport interface Dessert {\r\n    calories: number;\r\n    carbs: number;\r\n    fat: number;\r\n    name: string;\r\n    protein: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-sortheader',\r\n    templateUrl: './sortheader.component.html',\r\n    styleUrls: ['./sortheader.component.scss']\r\n})\r\nexport class SortheaderComponent {\r\n    desserts: Dessert[] = [\r\n        { name: 'Frozen yogurt', calories: 159, fat: 6, carbs: 24, protein: 4 },\r\n        {\r\n            name: 'Ice cream sandwich',\r\n            calories: 237,\r\n            fat: 9,\r\n            carbs: 37,\r\n            protein: 4\r\n        },\r\n        { name: 'Eclair', calories: 262, fat: 16, carbs: 24, protein: 6 },\r\n        { name: 'Cupcake', calories: 305, fat: 4, carbs: 67, protein: 4 },\r\n        { name: 'Gingerbread', calories: 356, fat: 16, carbs: 49, protein: 4 }\r\n    ];\r\n\r\n    sortedData: Dessert[];\r\n\r\n    constructor() {\r\n        this.sortedData = this.desserts.slice();\r\n    }\r\n\r\n    sortData(sort: Sort) {\r\n        const data = this.desserts.slice();\r\n        if (!sort.active || sort.direction === '') {\r\n            this.sortedData = data;\r\n            return;\r\n        }\r\n\r\n        this.sortedData = data.sort((a, b) => {\r\n            const isAsc = sort.direction === 'asc';\r\n            switch (sort.active) {\r\n                case 'name':\r\n                    return compare(a.name, b.name, isAsc);\r\n                case 'calories':\r\n                    return compare(a.calories, b.calories, isAsc);\r\n                case 'fat':\r\n                    return compare(a.fat, b.fat, isAsc);\r\n                case 'carbs':\r\n                    return compare(a.carbs, b.carbs, isAsc);\r\n                case 'protein':\r\n                    return compare(a.protein, b.protein, isAsc);\r\n                default:\r\n                    return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction compare(a, b, isAsc) {\r\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","<mat-card>\r\n  <mat-card-content>\r\n    <mat-card-title>Sorting overview</mat-card-title>\r\n    \r\n    \t\r\n    <table class=\"m-t-20\" matSort (matSortChange)=\"sortData($event)\" width=\"100%\">\r\n\t  <tr>\r\n\t    <th mat-sort-header=\"name\">Dessert (100g)</th>\r\n\t    <th mat-sort-header=\"calories\">Calories</th>\r\n\t    <th mat-sort-header=\"fat\">Fat (g)</th>\r\n\t    <th mat-sort-header=\"carbs\">Carbs (g)</th>\r\n\t    <th mat-sort-header=\"protein\">Protein (g)</th>\r\n\t  </tr>\r\n\r\n\t  <tr *ngFor=\"let dessert of sortedData\">\r\n\t    <td>{{dessert.name}}</td>\r\n\t    <td>{{dessert.calories}}</td>\r\n\t    <td>{{dessert.fat}}</td>\r\n\t    <td>{{dessert.carbs}}</td>\r\n\t    <td>{{dessert.protein}}</td>\r\n\t  </tr>\r\n\t</table>\r\n\r\n    \r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-wizard',\r\n  templateUrl: './wizard.component.html',\r\n  styleUrls: ['./wizard.component.scss']\r\n})\r\nexport class WizardComponent implements OnInit {\r\n  isLinear = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n  }\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- row -->\r\n<!-- ============================================================== -->\r\n<div fxLayout=\"row wrap\">\r\n  <!-- Card column -->\r\n  <div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-card-title>Horizontal wizard</mat-card-title>\r\n        <button mat-raised-button (click)=\"isLinear = true\" id=\"toggle-linear\">Enable linear mode</button>\r\n        <mat-horizontal-stepper [linear]=\"isLinear\">\r\n          <mat-step [stepControl]=\"firstFormGroup\">\r\n            <form [formGroup]=\"firstFormGroup\">\r\n              <ng-template matStepLabel>Fill out your name</ng-template>\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\r\n              </mat-form-field>\r\n              <div>\r\n                <button mat-raised-button color=\"warn\" matStepperNext>Next</button>\r\n              </div>\r\n            </form>\r\n          </mat-step>\r\n          <mat-step [stepControl]=\"secondFormGroup\">\r\n            <form [formGroup]=\"secondFormGroup\">\r\n              <ng-template matStepLabel>Fill out your address</ng-template>\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"Address\" formControlName=\"secondCtrl\" required>\r\n              </mat-form-field>\r\n              <div>\r\n                <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\r\n                <button mat-raised-button color=\"warn\" matStepperNext>Next</button>\r\n              </div>\r\n            </form>\r\n          </mat-step>\r\n          <mat-step>\r\n            <ng-template matStepLabel>Done</ng-template>\r\n            You are now done.\r\n            <div>\r\n              <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\r\n            </div>\r\n          </mat-step>\r\n        </mat-horizontal-stepper>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n  <!-- Card column -->\r\n  <div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-card-title>Vertical wizard</mat-card-title>\r\n        <button mat-raised-button (click)=\"isLinear = true\" id=\"toggle-linear\">Enable linear mode</button>\r\n        <mat-vertical-stepper [linear]=\"isLinear\">\r\n          <mat-step [stepControl]=\"firstFormGroup\">\r\n            <form [formGroup]=\"firstFormGroup\">\r\n              <ng-template matStepLabel>Fill out your name</ng-template>\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\r\n              </mat-form-field>\r\n              <div>\r\n                <button mat-raised-button color=\"warn\" matStepperNext>Next</button>\r\n              </div>\r\n            </form>\r\n          </mat-step>\r\n          <mat-step [stepControl]=\"secondFormGroup\">\r\n            <form [formGroup]=\"secondFormGroup\">\r\n              <ng-template matStepLabel>Fill out your address</ng-template>\r\n              <mat-form-field>\r\n                <input matInput placeholder=\"Address\" formControlName=\"secondCtrl\" required>\r\n              </mat-form-field>\r\n              <div>\r\n                <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\r\n                <button mat-raised-button color=\"warn\" matStepperNext>Next</button>\r\n              </div>\r\n            </form>\r\n          </mat-step>\r\n          <mat-step>\r\n            <ng-template matStepLabel>Done</ng-template>\r\n            You are now done.\r\n            <div>\r\n              <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\r\n            </div>\r\n          </mat-step>\r\n        </mat-vertical-stepper>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n  </div>\r\n</div>"],"sourceRoot":"webpack:///"}